// Generated by ts-to-zod
import { z } from 'zod';

export const conversationAssigneeSchema = z.object({
    id: z.string(),
    email: z.string(),
    first_name: z.string(),
    last_name: z.string(),
    is_admin: z.boolean(),
    is_available: z.boolean(),
    is_blocked: z.boolean(),
    custom_fields: z.record(z.any())
});

export const conversationRecipientSchema = z.object({
    name: z.string(),
    handle: z.string(),
    role: z.union([z.literal('from'), z.literal('to'), z.literal('cc'), z.literal('bcc')])
});

export const conversationSchema = z.object({
    id: z.string(),
    subject: z.string(),
    status: z.union([z.literal('archived'), z.literal('unassigned'), z.literal('deleted'), z.literal('assigned')]),
    assignee: conversationAssigneeSchema.nullable(),
    recipient: conversationRecipientSchema.nullable(),
    tags: z.array(
        z.object({
            id: z.string(),
            name: z.string(),
            description: z.string().nullable(),
            highlight: z.string().nullable(),
            is_private: z.boolean(),
            is_visible_in_conversation_lists: z.boolean(),
            created_at: z.string(),
            updated_at: z.string()
        })
    ),
    links: z.array(
        z.object({
            id: z.string(),
            name: z.string(),
            type: z.string(),
            external_url: z.string(),
            custom_fields: z.record(z.any())
        })
    ),
    custom_fields: z.record(z.any()),
    created_at: z.string(),
    waiting_since: z.string(),
    is_private: z.boolean(),
    scheduled_reminders: z.array(
        z.object({
            created_at: z.string(),
            scheduled_at: z.string(),
            updated_at: z.string()
        })
    )
});
