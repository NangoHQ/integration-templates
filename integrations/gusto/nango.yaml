integrations:
    # NOTE: if you're using this in your nango-integrations directory this
    # should be your integration id. This variable is only replaced in the
    # context of this repository
    ${PWD}:
        actions:
            create-user:
                description: Creates a user in Gusto.
                output: User
                endpoint:
                    method: POST
                    path: /users
                    group: Users
                input: GustoCreateUser
                scopes:
                    - employees:manage
            delete-user:
                description: Deletes a user in Gusto.
                endpoint:
                    method: DELETE
                    path: /users
                    group: Users
                output: SuccessResponse
                input: GustoDeleteUser
                scopes:
                    - employments:write
        syncs:
            users:
                runs: every day
                description: |
                    Fetches a list of users from Gusto.
                output: User
                track_deletes: true
                sync_type: full
                endpoint:
                    method: GET
                    path: /users
                    group: Users
                scopes:
                    - employees:read
            employees:
                runs: every 5m
                description: Fetches all employees from Gusto
                output: GustoEmployee
                sync_type: incremental
                auto_start: false
                endpoint:
                    method: GET
                    path: /employees
                    group: Employees
            unified-employees:
                runs: every 5m
                description: Fetches all employees from Gusto and maps them to the standard HRIS model
                output: StandardEmployee
                sync_type: incremental
                auto_start: false
                endpoint:
                    method: GET
                    path: /employees/unified
                    group: Employees
models:
    # Generic
    SuccessResponse:
        success: boolean
    IdEntity:
        id: string

    # User
    User:
        id: string
        email: string
        firstName: string
        lastName: string

    CreateUser:
        firstName: string
        lastName: string
        email: string

    GustoCreateUser:
        __extends: CreateUser
        middleInitial?: string
        preferredFirstName?: string
        dateOfBirth: string
        ssn?: string
        selfOnboarding?: boolean

    GustoDeleteUser:
        __extends: IdEntity
        effectiveDate?: string
        runTerminationPayroll?: boolean

    GustoEmployee:
        id: string
        uuid: string
        first_name: string
        last_name: string
        email: string
        work_email: string
        phone: string
        department: string
        department_uuid: string
        manager_uuid: string
        version: string
        terminated: boolean
        onboarded: boolean
        onboarding_status: string
        date_of_birth: string
        has_ssn: boolean
        custom_fields: string
        jobs:
            - id: string
              title: string
              hire_date: string
              payment_unit: string
              primary: boolean

    StandardEmployee:
        # Core fields
        id: string
        firstName: string
        lastName: string
        email: string
        displayName: string

        # Employment details
        title: string
        department:
            id: string
            name: string
        employmentType: FULL_TIME | PART_TIME | CONTRACTOR | INTERN | TEMPORARY | OTHER
        employmentStatus: ACTIVE | TERMINATED | ON_LEAVE | SUSPENDED | PENDING
        startDate: string  # ISO date
        terminationDate: string | undefined  # ISO date
        manager:
            id: string
            firstName: string
            lastName: string
            email: string
        workLocation:
            name: string
            type: OFFICE | REMOTE | HYBRID
            primaryAddress:
                street: string | undefined
                city: string | undefined
                state: string | undefined
                country: string | undefined
                postalCode: string | undefined
                type: WORK | HOME

        # Personal details
        addresses:
            - street: string
              city: string
              state: string
              country: string
              postalCode: string
              type: HOME | WORK
        phones:
            - type: WORK | HOME | MOBILE
              number: string
        emails:
            - type: WORK | PERSONAL
              address: string

        # Provider-specific data
        metadata: 
            __string: any

        # Audit fields
        createdAt: string
        updatedAt: string