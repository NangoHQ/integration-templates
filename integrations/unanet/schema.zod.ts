// Generated by ts-to-zod
import { z } from 'zod';

export const timestampsSchema = z.object({
    createdAt: z.string().optional(),
    updatedAt: z.string().optional()
});

export const entitySchema = z.object({
    name: z.string()
});

export const locationSchema = z.object({
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    zip: z.string().optional()
});

export const stageSchema = z.object({
    id: z.number(),
    name: z.string(),
    status: z.string()
});

export const federalAgencySchema = z.object({
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    zip: z.string().optional(),
    companyId: z.number().optional(),
    name: z.string(),
    externalId: z.string().optional(),
    acronym: z.string().optional(),
    address1: z.string().optional(),
    address2: z.string().optional(),
    address3: z.string().optional(),
    isHeadquarters: z.boolean().optional(),
    parentCompanyId: z.number().optional(),
    parentCompanyName: z.string().optional(),
    childCount: z.number().optional(),
    addrLat: z.number().optional(),
    addrLong: z.number().optional()
});

export const createCompanySchema = z.object({
    name: z.string(),
    federalAgency: federalAgencySchema.optional()
});

export const companySchema = z.object({
    name: z.string(),
    externalId: z.string(),
    federalAgency: federalAgencySchema.optional(),
    shortName: z.string(),
    description: z.string(),
    id: z.string().optional()
});

export const opportunitySchema = z.object({
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    zip: z.string().optional(),
    name: z.string(),
    description: z.string(),
    id: z.string().optional(),
    externalId: z.string(),
    dueDate: z.string(),
    federalAgency: federalAgencySchema,
    stage: z.string(),
    active: z.boolean()
});

export const activitySchema = z.object({
    createdAt: z.string(),
    id: z.string(),
    message: z.string()
});

export const contactSchema = z.object({
    id: z.string().optional(),
    firstName: z.string(),
    lastName: z.string(),
    federalAgency: federalAgencySchema,
    position: z.string(),
    emailAddress: z.string(),
    phone: z.string(),
    fax: z.string()
});

export const baseLeadSchema = z.object({
    federalAgency: federalAgencySchema,
    name: z.string(),
    dueDate: z.string(),
    postedDate: z.string(),
    solicitationNumber: z.string(),
    naicsCategory: z.union([z.string(), z.array(z.string())]),
    city: z.string(),
    state: z.string(),
    country: z.string(),
    description: z.string()
});

export const createLeadSchema = z.object({
    federalAgency: federalAgencySchema,
    name: z.string(),
    dueDate: z.string(),
    postedDate: z.string(),
    solicitationNumber: z.string(),
    naicsCategory: z.union([z.string(), z.array(z.string())]),
    city: z.string(),
    state: z.string(),
    country: z.string(),
    description: z.string()
});

export const updateLeadSchema = z.object({
    federalAgency: federalAgencySchema,
    name: z.string(),
    dueDate: z.string(),
    postedDate: z.string(),
    solicitationNumber: z.string(),
    naicsCategory: z.union([z.string(), z.array(z.string())]),
    city: z.string(),
    state: z.string(),
    country: z.string(),
    description: z.string(),
    id: z.string()
});

export const leadSchema = z.object({
    federalAgency: federalAgencySchema,
    name: z.string(),
    dueDate: z.string(),
    postedDate: z.string(),
    solicitationNumber: z.string(),
    naicsCategory: z.union([z.string(), z.array(z.string())]),
    city: z.string(),
    state: z.string(),
    country: z.string(),
    description: z.string(),
    createdAt: z.string().optional(),
    updatedAt: z.string().optional(),
    id: z.string()
});

export const schemaSchema = z.object({
    PropertyName: z.string(),
    Group: z.string().nullable(),
    Label: z.string(),
    Description: z.string().nullable(),
    Enabled: z.boolean(),
    ReadOnly: z.boolean(),
    Required: z.boolean(),
    DefaultValue: z.string().nullable(),
    DataType: z.number(),
    MaxLength: z.number().nullable(),
    UnicodeSupported: z.boolean(),
    Searchable: z.boolean(),
    ArrayType: z.string().nullable(),
    IsPrimaryKey: z.boolean(),
    IsExternalId: z.boolean(),
    ObjectEndpoint: z.string().nullable(),
    IsHidden: z.boolean(),
    IsIncludedInResponse: z.boolean(),
    SchemaEndpoint: z.string().nullable(),
    SortOrder: z.number(),
    CustomSort: z.boolean()
});

export const anonymousUnanetActionGetleadsOutputSchema = z.array(leadSchema);

export const anonymousUnanetActionGetschemaOutputSchema = z.array(schemaSchema);

export const anonymousUnanetActionGetcompanyOutputSchema = companySchema.nullable();
