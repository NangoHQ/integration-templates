// ---------------------------
// This file was generated by Nango (v0.65.0)
// You can version this file
// ---------------------------

export interface SuccessResponse {
    success: boolean;
}

export interface TableView {
    id: string;
    name: string;
    type: string;
}

export interface TableField {
    id: string;
    description: string;
    name: string;
    type: string;
    options?: { [key: string]: any } | undefined;
}

export interface Table {
    baseId: string;
    baseName: string;
    id: string;
    name: string;
    views: TableView[];
    fields: TableField[];
    primaryFieldId: string;
}

export interface Base {
    id: string;
    name: string;
    permissionLevel: 'none' | 'read' | 'comment' | 'edit' | 'create';
}

export interface BaseId {
    baseId: string;
}

export interface WebhookSpecification {
    options: {
        filters: {
            recordChangeScope?: string | undefined;
            dataTypes: string[];
            changeTypes?: string[] | undefined;
            fromSources?: string[] | undefined;
            sourceOptions?: { formPageSubmission?: { pageId: string } | undefined; formSubmission?: { viewId: string } | undefined } | undefined;
            watchDataInFieldIds?: string[] | undefined;
            watchSchemasOfFieldIds?: string[] | undefined;
        };
        includes?:
            | {
                  includeCellValuesInFieldIds?: string[] | 'all' | undefined;
                  'includePreviousCellValues:'?: boolean | undefined;
                  includePreviousFieldDefinitions?: boolean | undefined;
              }
            | undefined;
    };
}

export interface NotificationResult {
    success: boolean;
    error?: { message: string } | undefined;
    completionTimestamp?: string | undefined;
    durationMs?: number | undefined;
    retryNumber?: number | undefined;
    willBeRetried?: boolean | undefined;
}

export interface Webhook {
    id: string;
    areNotificationsEnabled: boolean;
    cursorForNextPayload: number;
    isHookEnabled: boolean;
    lastSuccessfulNotificationTime: string | null;
    expirationTime?: string | undefined | undefined;
    specification: WebhookSpecification;
    lastNotificationResult: NotificationResult | null;
}

export interface WebhookResponse {
    webhooks: Webhook[];
}

export interface CreateWebhook {
    baseId: string;
    specification: WebhookSpecification;
}

export interface WebhookCreated {
    id: string;
    expirationTime: string;
}

export interface DeleteWebhook {
    baseId: string;
    webhookId: string;
}

export interface UserInformation {
    id: string;
    email: string | null;
}
