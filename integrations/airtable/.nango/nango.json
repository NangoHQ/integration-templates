[
    {
        "providerConfigKey": "airtable",
        "syncs": [
            {
                "name": "tables",
                "type": "sync",
                "description": "Lists all tables with their schema for all bases with a reference to the base id that\nthe table belongs to",
                "sync_type": "full",
                "usedModels": ["Table", "TableView", "TableField"],
                "runs": "every day",
                "version": "1.0.0",
                "track_deletes": true,
                "auto_start": true,
                "input": null,
                "output": ["Table"],
                "scopes": ["schema.bases:read"],
                "endpoints": [
                    {
                        "method": "GET",
                        "path": "/tables"
                    }
                ],
                "webhookSubscriptions": []
            },
            {
                "name": "bases",
                "type": "sync",
                "description": "List all bases",
                "sync_type": "full",
                "usedModels": ["Base"],
                "runs": "every day",
                "version": "1.0.0",
                "track_deletes": true,
                "auto_start": true,
                "input": null,
                "output": ["Base"],
                "scopes": ["schema.bases:read"],
                "endpoints": [
                    {
                        "method": "GET",
                        "path": "/bases"
                    }
                ],
                "webhookSubscriptions": []
            }
        ],
        "actions": [
            {
                "name": "whoami",
                "type": "action",
                "description": "Fetch current user information",
                "version": "1.0.0",
                "scopes": ["user.email:read"],
                "input": null,
                "output": ["UserInformation"],
                "usedModels": ["UserInformation"],
                "endpoint": {
                    "method": "GET",
                    "path": "/whoami",
                    "group": "Users"
                }
            },
            {
                "name": "create-webhook",
                "type": "action",
                "description": "Create a webhook for a particular base",
                "version": "1.0.0",
                "scopes": ["webhook:manage"],
                "input": "CreateWebhook",
                "output": ["WebhookCreated"],
                "usedModels": ["WebhookCreated", "CreateWebhook", "WebhookSpecification"],
                "endpoint": {
                    "method": "POST",
                    "path": "/webhooks",
                    "group": "Webhooks"
                }
            },
            {
                "name": "list-webhooks",
                "type": "action",
                "description": "List all the webhooks available for a base",
                "version": "1.0.0",
                "scopes": ["webhook:manage"],
                "input": "BaseId",
                "output": ["WebhookResponse"],
                "usedModels": ["WebhookResponse", "Webhook", "WebhookSpecification", "NotificationResult", "BaseId"],
                "endpoint": {
                    "method": "GET",
                    "path": "/webhooks",
                    "group": "Webhooks"
                }
            },
            {
                "name": "delete-webhook",
                "type": "action",
                "description": "Delete a webhook",
                "version": "1.0.0",
                "scopes": ["webhook:manage"],
                "input": "DeleteWebhook",
                "output": ["SuccessResponse"],
                "usedModels": ["SuccessResponse", "DeleteWebhook"],
                "endpoint": {
                    "method": "DELETE",
                    "path": "/webhooks",
                    "group": "Webhooks"
                }
            }
        ],
        "onEventScripts": {
            "post-connection-creation": [],
            "pre-connection-deletion": []
        }
    }
]
