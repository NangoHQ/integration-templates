// ---------------------------
// This file was generated by Nango (v0.57.3)
// You can version this file
// ---------------------------

export interface CalendarSetting {
    kind: string;
    etag: string;
    id: string;
    value: string;
}

export interface SettingsResponse {
    settings: CalendarSetting[];
}

export interface UserInformation {
    id: string;
    email: string;
}

export interface GoogleCalendar {
    kind: string;
    etag: string;
    id: string;
    summary: string;
    description: string;
    location: string;
    timeZone: string;
    summaryOverride: string;
    colorId: string;
    backgroundColor: string;
    foregroundColor: string;
    hidden: boolean;
    selected: boolean;
    accessRole: string;
    defaultReminders: { method: string; minutes: number }[];
    notificationSettings: { notifications: { type: string; method: string }[] };
    primary: boolean;
    deleted: boolean;
    conferenceProperties: { allowedConferenceSolutionTypes: string[] };
}

export interface GoogleCalendarEvent {
    kind: string;
    etag: string;
    id: string;
    status: string;
    htmlLink?: string;
    created?: string;
    updated?: string;
    summary?: string;
    description?: string;
    location?: string;
    colorId?: string;
    creator?: { id?: string; email: string; displayName?: string; self?: boolean };
    organizer?: { id?: string; email: string; displayName?: string; self?: boolean };
    start?: { date?: string; dateTime?: string; timeZone?: string };
    end?: { date?: string; dateTime?: string; timeZone?: string };
    endTimeUnspecified?: boolean;
    recurrence?: string[];
    recurringEventId?: string;
    originalStartTime?: { date?: string; dateTime?: string; timeZone?: string };
    transparency?: string;
    visibility?: string;
    iCalUID?: string;
    sequence?: number;
    attendees?: {
        id?: string;
        email: string;
        displayName?: string;
        organizer?: boolean;
        self?: boolean;
        resource?: boolean;
        optional?: boolean;
        responseStatus: string;
        comment?: string;
        additionalGuests?: number;
    }[];
    attendeesOmitted?: boolean;
    extendedProperties?: { private?: { [key: string]: string }; shared?: { [key: string]: string } };
    hangoutLink?: string;
    conferenceData?: {
        createRequest?: { requestId: string; conferenceSolutionKey: { type: string }; status: { statusCode: string } };
        entryPoints: {
            entryPointType: string;
            uri: string;
            label?: string;
            pin?: string;
            accessCode?: string;
            meetingCode?: string;
            passcode?: string;
            password?: string;
            regionCode?: string;
        }[];
        conferenceSolution: { key: { type: string }; name: string; iconUri: string };
        conferenceId: string;
        signature?: string;
        notes?: string;
        parameters?: { addOnParameters?: { parameters: { [key: string]: string } } };
    };
    gadget?: { type: string; title: string; link: string; iconLink: string; width: number; height: number; display: string; preferences: { key: string } };
    anyoneCanAddSelf?: boolean;
    guestsCanInviteOthers?: boolean;
    guestsCanModify?: boolean;
    guestsCanSeeOtherGuests?: boolean;
    privateCopy?: boolean;
    locked?: boolean;
    reminders?: { useDefault: boolean; overrides?: { method: string; minutes: number }[] };
    outOfOfficeProperties?: { autoDeclineMode: string; declineMessage: string };
    source?: { url: string; title: string };
    workingLocationProperties?: {
        type: string;
        homeOffice: string;
        customLocation: { label: string };
        officeLocation: { buildingId: string; floorId: string; floorSectionId: string; deskId: string; label: string };
    };
    attachments?: { fileUrl: string; title: string; mimeType: string; iconLink: string; fileId: string }[];
    eventType?: string;
}
