// ---------------------------
// This file was generated by Nango (v0.64.1)
// You can version this file
// ---------------------------

export interface SyncMetadata_google_calendar_events {
  calendarsToSync: string[];
  singleEvents: boolean;
};

export interface GoogleCalendarEvent {
  kind: string;
  etag: string;
  id: string;
  status: string;
  htmlLink: string;
  created: string;
  updated: string;
  summary: string;
  description: string;
  location: string;
  colorId: string;
  creator: {  id: string;
  email: string;
  displayName: string;
  self: boolean;};
  organizer: {  id: string;
  email: string;
  displayName: string;
  self: boolean;};
  start: {  date: string;
  dateTime: string;
  timeZone: string;};
  end: {  date: string;
  dateTime: string;
  timeZone: string;};
  endTimeUnspecified: boolean;
  recurrence: string[];
  recurringEventId: string;
  originalStartTime: {  date: string;
  dateTime: string;
  timeZone: string;};
  transparency: string;
  visibility: string;
  iCalUID: string;
  sequence: number;
  attendees: (string | string | string | boolean | boolean | boolean | boolean | string | string | number)[];
  attendeesOmitted: boolean;
  extendedProperties: {  private: {};
  shared: {};};
  hangoutLink: string;
  conferenceData: {  createRequest: {  requestId: string;
  conferenceSolutionKey: {  type: string;};
  status: {  statusCode: string;};};
  entryPoints: (string | string | string | string | string | string | string | string | string)[];
  conferenceSolution: {  key: {  type: string;};
  name: string;
  iconUri: string;};
  conferenceId: string;
  signature: string;
  notes: string;
  parameters: {  addOnParameters: {  parameters: {};};};};
  gadget: {  type: string;
  title: string;
  link: string;
  iconLink: string;
  width: number;
  height: number;
  display: string;
  preferences: {};};
  anyoneCanAddSelf: boolean;
  guestsCanInviteOthers: boolean;
  guestsCanModify: boolean;
  guestsCanSeeOtherGuests: boolean;
  privateCopy: boolean;
  locked: boolean;
  reminders: {  useDefault: boolean;
  overrides: (string | number)[];};
  outOfOfficeProperties: {  autoDeclineMode: string;
  declineMessage: string;};
  source: {  url: string;
  title: string;};
  workingLocationProperties: {  type: string;
  homeOffice?: any;
  customLocation: {  label: string;};
  officeLocation: {  buildingId: string;
  floorId: string;
  floorSectionId: string;
  deskId: string;
  label: string;};};
  attachments: (string | string | string | string | string)[];
  eventType: string;
};

export interface SyncMetadata_google_calendar_calendars {
};

export interface GoogleCalendar {
  kind: string;
  etag: string;
  id: string;
  summary: string;
  description: string;
  location: string;
  timeZone: string;
  summaryOverride: string;
  colorId: string;
  backgroundColor: string;
  foregroundColor: string;
  hidden: boolean;
  selected: boolean;
  accessRole: string;
  defaultReminders: (string | number)[];
  notificationSettings: {  notifications: (string | string)[];};
  primary: boolean;
  deleted: boolean;
  conferenceProperties: {  allowedConferenceSolutionTypes: string[];};
};

/** @deprecated It is recommended to use a Model */
export type ActionInput_google_calendar_whoami = void

export interface ActionOutput_google_calendar_whoami {
  id: string;
  email: string;
};

/** @deprecated It is recommended to use a Model */
export type ActionInput_google_calendar_settings = void

export interface ActionOutput_google_calendar_settings {
  settings: (string | string | string | string)[];
};
