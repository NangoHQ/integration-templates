// Generated by ts-to-zod
import { z } from 'zod';

export const slackUserSchema = z.object({
    id: z.string(),
    team_id: z.string(),
    name: z.string(),
    deleted: z.boolean(),
    tz: z.string(),
    tz_label: z.string(),
    tz_offset: z.number(),
    profile: z.object({
        avatar_hash: z.string(),
        real_name: z.string().nullable(),
        display_name: z.string().nullable(),
        real_name_normalized: z.string().nullable(),
        display_name_normalized: z.string().nullable(),
        email: z.string().nullable(),
        image_original: z.string().nullable()
    }),
    is_admin: z.boolean(),
    is_owner: z.boolean(),
    is_primary_owner: z.boolean(),
    is_restricted: z.boolean(),
    is_ultra_restricted: z.boolean(),
    is_bot: z.boolean(),
    updated: z.number(),
    is_app_user: z.boolean(),
    raw_json: z.string()
});

export const slackChannelSchema = z.object({
    id: z.string(),
    name: z.string(),
    is_channel: z.boolean(),
    is_group: z.boolean(),
    is_im: z.boolean(),
    created: z.number(),
    creator: z.string(),
    is_archived: z.boolean(),
    is_general: z.boolean(),
    name_normalized: z.string(),
    is_shared: z.boolean(),
    is_private: z.boolean(),
    is_mpim: z.boolean(),
    updated: z.number(),
    num_members: z.number(),
    raw_json: z.string()
});

export const slackMessageSchema = z.object({
    id: z.string(),
    ts: z.string(),
    channel_id: z.string(),
    thread_ts: z.string().nullable(),
    app_id: z.string().nullable(),
    bot_id: z.string().nullable(),
    display_as_bot: z.boolean().nullable(),
    is_locked: z.boolean().nullable(),
    metadata: z.object({
        event_type: z.string()
    }),
    parent_user_id: z.string().nullable(),
    subtype: z.string().nullable(),
    text: z.string().nullable(),
    topic: z.string().nullable(),
    user_id: z.string().nullable(),
    raw_json: z.string()
});

export const slackMessageReplySchema = z.object({
    id: z.string(),
    ts: z.string(),
    channel_id: z.string(),
    thread_ts: z.string().nullable(),
    app_id: z.string().nullable(),
    bot_id: z.string().nullable(),
    display_as_bot: z.boolean().nullable(),
    is_locked: z.boolean().nullable(),
    metadata: z.object({
        event_type: z.string()
    }),
    parent_user_id: z.string().nullable(),
    subtype: z.string().nullable(),
    text: z.string().nullable(),
    topic: z.string().nullable(),
    user_id: z.string().nullable(),
    root: z.object({
        message_id: z.string().nullable(),
        ts: z.string()
    }),
    raw_json: z.string()
});

export const slackMessageReactionSchema = z.object({
    id: z.string(),
    message_ts: z.string(),
    thread_ts: z.string(),
    channel_id: z.string(),
    user_id: z.string(),
    reaction_name: z.string()
});

export const sendMesssageInputSchema = z.object({
    channel: z.string(),
    text: z.string()
});

export const sendMesssageOutputSchema = z.object({
    ok: z.boolean(),
    channel: z.union([z.string(), z.undefined()]).optional(),
    ts: z.union([z.string(), z.undefined()]).optional(),
    message: z.union([z.string(), z.undefined()]).optional(),
    warning: z.union([z.string(), z.undefined()]).optional(),
    error: z.union([z.string(), z.undefined()]).optional(),
    raw_json: z.string()
});
