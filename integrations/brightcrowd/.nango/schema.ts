// ---------------------------
// This file was generated by Nango (v0.56.1)
// You can version this file
// ---------------------------

export interface Metadata {
    bookIds: string[];
    timeframe?: 7 | 30 | 90 | 'all';
}

export interface Affiliation {
    type: 'OtherAffiliation' | 'UniversityAffiliation' | 'CompanyAffiliation';
    organization?: string | null;
    major?: string | string[];
    degree?: string | string[];
    school?: string | string[];
    graduationYear?: number | null;
    specialty?: string | string[];
    category?: string | string[];
    title?: string;
    startYear?: number | null;
    endYear?: number | null;
    office?: string | string[];
    group?: string | string[];
}

export interface QuestionField {
    id: string;
    label: string;
    type: string;
    headline?: string | null;
    placeholder?: string | null;
    active: boolean;
    required: boolean;
    maxcount?: number | null;
    maxlength?: number | null;
    allowMentions: boolean;
    customizable: boolean;
}

export interface Question {
    id: string;
    type: string | null;
    name: string | null;
    description?: string | null;
    warning?: string | null;
    route: string | null;
    questionHeader: string | null;
    questionSubheader?: string | null;
    headline?: string | null;
    active: boolean;
    required: boolean;
    adminOnly: boolean;
    fields: QuestionField[];
}

export interface FrontMatterSection {
    uri: string;
    title: string;
    snippet: string;
    disabled?: boolean;
}

export interface FrontMatter {
    sections: FrontMatterSection[];
}

export interface Preface {
    text: string | null;
    docId?: string | null;
    video?: string | null;
    pictures?: string[] | null;
}

export interface BookById {
    id: string;
    alias: string;
    name: string;
    pictureId: string | null;
    config: string | null;
    coverPictureId: string | null;
    bannerPictureId: string | null;
    affiliation: Affiliation | null;
    questions: Question[];
    flags: string[];
    publishedAt?: string | null;
    closedAt?: string | null;
    lockedAt?: string | null;
    created: string;
    modified: string;
    frontMatter: FrontMatter | null;
    preface?: Preface | null;
}

export interface Book {
    id: string;
    alias: string;
    name: string;
    pictureId: string | null;
    config: string | null;
    coverPictureId: string | null;
    bannerPictureId: string | null;
    affiliation: Affiliation | null;
    questions: Question[];
    flags: string[];
    publishedAt?: string | null;
    closedAt?: string | null;
    lockedAt?: string | null;
    created: string;
    modified: string;
    frontMatter: FrontMatter | null;
    preface?: Preface | null;
}

export interface Instruction {
    addPage: string | null;
    editPage: string | null;
    requestAccess: string | null;
}

export interface Picture {
    type: 'profile' | 'content' | 'caption';
    id: string;
    caption?: string | null;
}

export interface Video {
    url: string;
    caption?: string | null;
}

export interface Page {
    id: string;
    alias: string;
    name: string;
    status: 'draft' | 'published' | 'hidden';
    content: {
        firstName: string;
        lastName: string;
        previousName?: string | null;
        suffix?: string;
        partnerFirstName?: string | null;
        partnerLastName?: string | null;
        pronouns?: string;
        pictureId?: string | null;
        audioId?: string | null;
    };
    pictures?: Picture[] | null;
    videos?: Video[] | null;
    tagUsers?: string[] | null;
    homeTown?: string | null;
    currentCity?: string | null;
    campusResidence?: string | null;
    affiliations?: Affiliation[] | null;
    plan?: 'school' | 'work' | 'other';
    created: string;
    modifiedByUserAt?: string | null;
    completedByUserAt?: string | null;
    externalId?: string;
}

export interface Notification {
    uri: string;
    topicUri: string;
    status: string;
    messageCount: number;
    openCount: number;
    clickCount: number;
    uniqueOpenCount: number;
    uniqueClickCount: number;
    bounceCount: number;
}

export interface Invitations {
    messageCount: number;
    uniqueOpenCount: number;
    uniqueClickCount: number;
    bounceCount: number;
    uniqueInvitationOpenUserCount: number;
    uniqueInvitationBounceUserCount: number;
}

export interface WebStats {
    dateRange: string;
    values: { visitors: number; totalPageViews: number; sessions: number; socialClicks: number };
    previousValues: { visitors: number; totalPageViews: number; sessions: number; socialClicks: number };
}

export interface BookStats {
    values: { pagesCreated: number; pagesUpdated: number; taggedUsers: number };
    previousValues: { pagesCreated: number; pagesUpdated: number; taggedUsers: number };
}

export interface EmailStats {
    notifications: Notification[];
    invitations: Invitations;
    web: WebStats;
    book: BookStats;
}

export interface BookAnalytics {
    id: string;
    email: EmailStats;
    web: WebStats;
    book: BookStats;
}
