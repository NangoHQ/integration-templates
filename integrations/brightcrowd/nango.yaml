integrations:
    brightcrowd:
        syncs:
            books:
                runs: every day
                description: |
                    Fetches a list of books from Brightcrowd.
                output: Book
                track_deletes: true
                sync_type: full
                endpoint:
                    method: GET
                    path: /books
                    group: Books
                scopes: bcb.partner/book.read
            pages:
                runs: every day
                description: |
                    Fetches a list of all pages in a book from Brightcrowd.
                input: IdEntity
                output: Page
                track_deletes: true
                sync_type: full
                endpoint:
                    method: GET
                    path: /pages
                    group: Books
                scopes: bcb.partner/page.read

models:
    # Generic
    SuccessResponse:
        success: boolean
    IdEntity:
        id: string

    # Book
    Book:
        id: string
        uri: string
        userUri: string
        alias: string
        organizationUri: string
        baUri: string
        name: string
        pictureId: string | null
        bookTemplateUri: string
        config: string | null
        coverPictureId: string | null
        bannerPictureId: string | null
        affiliation: Affiliation | null
        questions: Question[]
        flags: string[]
        publishedAt?: string | null
        closedAt?: string | null
        lockedAt?: string | null
        created: string
        modified: string

    Section:
        uri: string
        title: string
        snippet: string
        disabled: boolean
    Instruction:
        addPage: string | null
        editPage: string | null
        requestAccess: string | null
    Question:
        id: string
        type: string
        name: string
        description?: string
        warning?: string
        route: string
        questionHeader?: string | null
        questionSubheader?: string | null
        headline?: string
        active: boolean
        required: boolean
        adminOnly: boolean

    #  Page
    Page:
        id: string
        uri: string
        userUri: string
        bookUri: string
        alias: string
        name: string
        status: draft | published | hidden
        content:
            firstName: string
            lastName: string
            previousName?: string | null
            suffix?: string
            partnerFirstName?: string | null
            partnerLastName?: string | null
            pronouns?: string
            pictureId?: string | null
            audioId?: string | null
        pictures?: Picture[] | null
        videos?: Video[] | null
        tagUsers?: string[] | null
        homeTown?: string | null
        currentCity?: string | null
        campusResidence?: string | null
        affiliations?: Affiliation[] | null
        plan?: school | work | other
        created: string
        modifiedByUserAt?: string | null
        completedByUserAt?: string | null
        externalId?: string

    Video:
        url: string
        caption?: string | null
    Picture:
        type: profile | content | caption
        id: string
        caption?: string | null
    Affiliation:
        type: OtherAffiliation | UniversityAffiliation | CompanyAffiliation
        organization?: string | null
        major?: string | string[]
        degree?: string | string[]
        school?: string | string[]
        graduationYear?: integer | null
        specialty?: string | string[]
        category?: string | string[]
        title?: string
        startYear?: integer | null
        endYear?: integer | null
        office?: string | string[]
        group?: string | string[]
