// Generated by ts-to-zod
import { z } from 'zod';

export const idEntitySchema = z.object({
    id: z.string()
});

export const successResponseSchema = z.object({
    success: z.boolean()
});

export const userSchema = z.object({
    id: z.string(),
    email: z.string(),
    firstName: z.string(),
    lastName: z.string()
});

export const freshdeskCreateUserSchema = z.object({
    name: z.string(),
    email: z.string(),
    address: z.string().optional(),
    description: z.string().optional(),
    job_title: z.string().optional(),
    twitter_id: z.string().optional(),
    fb_profile_id: z.string().optional(),
    phone: z.number().optional(),
    mobile: z.number().optional(),
    language: z.string().optional(),
    time_zone: z.string().optional(),
    customer_id: z.number().optional(),
    deleted: z.boolean().optional(),
    avatar_attributes: z
        .object({
            content: z.record(z.any())
        })
        .optional(),
    custom_fields: z
        .object({
            type: z.record(z.any()),
            additionalProperties: z.object({
                type: z.any()
            })
        })
        .optional()
});

export const timestampsSchema = z.object({
    created_at: z.string(),
    updated_at: z.string()
});

export const hierarchyDataSchema = z.object({
    id: z.number(),
    name: z.string(),
    language: z.string()
});

export const hierarchyLevelSchema = z.object({
    level: z.number(),
    type: z.string(),
    data: hierarchyDataSchema
});

export const seoDataSchema = z.object({
    meta_title: z.union([z.string(), z.undefined()]).optional(),
    meta_description: z.union([z.string(), z.undefined()]).optional(),
    meta_keywords: z.union([z.string(), z.undefined()]).optional()
});

export const articleSchema = z.object({
    id: z.number(),
    created_at: z.string(),
    updated_at: z.string(),
    type: z.number(),
    category_id: z.number(),
    folder_id: z.number(),
    hierarchy: z.array(hierarchyLevelSchema),
    thumbs_up: z.number(),
    thumbs_down: z.number(),
    hits: z.number(),
    tags: z.union([z.array(z.string()), z.undefined()]).optional(),
    seo_data: seoDataSchema,
    agent_id: z.number(),
    title: z.string(),
    description: z.string(),
    description_text: z.string(),
    status: z.number()
});
