// ---------------------------
// This file was generated by Nango (v0.53.0)
// You can version this file
// ---------------------------

export interface OptionalBackfillSetting {
    backfillPeriodMs: number;
}

export interface Attachments {
    filename: string;
    mimeType: string;
    size: number;
    attachmentId: string;
}

export interface OutlookEmail {
    id: string;
    sender?: string;
    recipients?: string | undefined;
    date: string;
    subject: string;
    body: string;
    attachments: Attachments[];
    threadId: string;
}

export interface DocumentInput {
    threadId: string;
    attachmentId: string;
}

export interface EmailAddress {
    address: string;
    name: string;
}

export interface OutlookCalendar {
    id: string;
    allowedOnlineMeetingProviders: string[];
    canEdit: boolean;
    canShare: boolean;
    canViewPrivateItems: boolean;
    changeKey: string;
    color:
        | 'auto'
        | 'lightBlue'
        | 'lightGreen'
        | 'lightOrange'
        | 'lightGray'
        | 'lightYellow'
        | 'lightTeal'
        | 'lightPink'
        | 'lightBrown'
        | 'lightRed'
        | 'maxColor';
    defaultOnlineMeetingProvider: string;
    hexColor: string;
    isDefaultCalendar: boolean;
    isRemovable: boolean;
    isTallyingResponses: boolean;
    name: string;
    owner: EmailAddress;
}

export interface TimeSlot {
    dateTime: string;
    timeZone: string;
}

export interface Attendee {
    emailAddress: EmailAddress;
    proposedNewTime?: { start: TimeSlot; end: TimeSlot };
    status: { response: 'none' | 'accepted' | 'declined' | 'tentative'; sentDateTime: string };
    type: 'required' | 'optional' | 'resource';
}

export interface Location {
    address?: string;
    city?: string;
    countryOrRegion?: string;
    postalCode?: string;
    state?: string;
    street?: string;
    coordinates?: { accuracy?: number; altitude?: number; altitudeAccuracy?: number; latitude?: number; longitude?: number };
    displayName?: string;
    locationEmailAddress?: string;
    locationUri?: string;
    locationType?:
        | 'default'
        | 'conferenceRoom'
        | 'homeAddress'
        | 'businessAddress'
        | 'geoCoordinates'
        | 'streetAddress'
        | 'hotel'
        | 'restaurant'
        | 'localBusiness'
        | 'postalAddress';
    uniqueId?: string;
    uniqueIdType?: string;
}

export interface OnlineMeetingInfo {
    conferenceId: string;
    joinUrl: string;
    phones: { number: string; type: 'home' | 'business' | 'mobile' | 'other' | 'assistant' | 'homeFax' | 'businessFax' | 'otherFax' | 'pager' | 'radio' }[];
    quickDial: string;
    tollFreeNumbers: string[];
    tollNumber: string;
}

export interface PatternedRecurrence {
    pattern: {
        dayOfMonth?: number;
        daysOfWeek?: ('sunday' | 'monday' | 'tuesday' | 'wednesday' | 'thursday' | 'friday' | 'saturday')[];
        firstDayOfWeek: 'sunday' | 'monday' | 'tuesday' | 'wednesday' | 'thursday' | 'friday' | 'saturday';
        index?: 'first' | 'second' | 'third' | 'fourth' | 'last';
        interval: number;
        month?: number;
        type: 'daily' | 'weekly' | 'absoluteMonthly' | 'relativeMonthly' | 'absoluteYearly' | 'relativeYearly';
    };
    range: { endDate?: string; numberOfOccurrences?: number; recurrenceTimeZone?: string; startDate: string; type: 'endDate' | 'noEnd' | 'numbered' };
}

export interface OutlookCalendarEvent {
    id: string;
    allowNewTimeProposals?: boolean;
    attendees: Attendee[];
    body?: { content: string; contentType: 'text' | 'html' };
    bodyPreview: string;
    categories?: string[];
    changeKey?: string;
    createdDateTime?: string;
    end: { dateTime: string; timeZone: string };
    hasAttachments?: boolean;
    hideAttendees?: boolean;
    iCalUId?: string;
    importance: 'low' | 'normal' | 'high';
    isAllDay: boolean;
    isCancelled: boolean;
    isDraft?: boolean;
    isOnlineMeeting?: boolean;
    isOrganizer: boolean;
    isReminderOn?: boolean;
    lastModifiedDateTime?: string;
    location: Location;
    locations?: Location[];
    onlineMeeting: OnlineMeetingInfo | null;
    onlineMeetingProvider?: string;
    onlineMeetingUrl?: string;
    organizer: { emailAddress: EmailAddress };
    originalEndTimeZone?: string;
    originalStart?: string;
    originalStartTimeZone?: string;
    recurrence?: PatternedRecurrence | null;
    reminderMinutesBeforeStart?: number;
    responseRequested: boolean;
    responseStatus: { response: string; time: string };
    sensitivity: 'normal' | 'personal' | 'private' | 'confidential';
    seriesMasterId?: string;
    showAs?: 'free' | 'tentative' | 'busy' | 'oof' | 'workingElsewhere' | 'unknown';
    start: { dateTime: string; timeZone: string };
    subject: string;
    transactionId?: string;
    type?: 'singleInstance' | 'occurrence' | 'exception' | 'seriesMaster';
    webLink: string;
}

/** @deprecated It is recommended to use a Model */
export type Anonymous_outlook_action_fetchattachment_output = string;
