// Generated by ts-to-zod
import { z } from 'zod';

export const jiraProjectIdSchema = z.object({
    id: z.string()
});

export const jiraIssueMetadataSchema = z.object({
    projectIdsToSync: z.array(jiraProjectIdSchema),
    cloudId: z.string().optional(),
    baseUrl: z.string().optional()
});

export const timestampsSchema = z.object({
    createdAt: z.string(),
    updatedAt: z.string()
});

export const authorSchema = z.object({
    accountId: z.string().nullable(),
    active: z.boolean(),
    displayName: z.string(),
    emailAddress: z.string().nullable()
});

export const commentSchema = z.object({
    id: z.string(),
    createdAt: z.string(),
    updatedAt: z.string(),
    author: authorSchema,
    body: z.record(z.string(), z.any())
});

export const issueSchema = z.object({
    id: z.string(),
    createdAt: z.string(),
    updatedAt: z.string(),
    key: z.string(),
    summary: z.string(),
    issueType: z.string(),
    status: z.string(),
    assignee: z.string().nullable(),
    url: z.string(),
    webUrl: z.string(),
    projectId: z.string(),
    projectKey: z.string(),
    projectName: z.string(),
    comments: z.array(commentSchema)
});

export const projectSchema = z.object({
    id: z.string(),
    key: z.string(),
    name: z.string(),
    url: z.string(),
    projectTypeKey: z.string(),
    webUrl: z.string()
});

export const issueTypeSchema = z.object({
    projectId: z.string(),
    id: z.string(),
    name: z.string(),
    description: z.string().nullable(),
    url: z.string()
});

export const createIssueInputSchema = z.object({
    summary: z.string(),
    description: z.string().optional(),
    assignee: z.string().optional(),
    labels: z.array(z.string()).optional(),
    project: z.string(),
    issueType: z.string()
});

export const createIssueOutputSchema = z.object({
    id: z.string(),
    key: z.string(),
    self: z.string()
});
