// ---------------------------
// This file was generated by Nango (v0.57.3)
// You can version this file
// ---------------------------

export interface IdEntity {
    id: string;
}

export interface SuccessResponse {
    success: boolean;
}

export interface CreateUser {
    firstName: string;
    lastName: string;
    email: string;
    role?: 'admin' | 'agent';
}

export interface User {
    id: string;
    firstName: string;
    lastName: string;
    email: string;
}

export interface CategoryCreate {
    category: { name: string; description?: string };
}

export interface Category {
    id: string;
    url: string;
    name: string;
    description: string;
}

export interface SectionCreate {
    category_id: number;
    section: { name: string; description?: string };
}

export interface Section {
    id: string;
    url: string;
    category_id: number;
    name: string;
    description: string;
}

export interface ArticleLite {
    title: string;
    id: string;
    url: string;
}

export interface ArticleResponse {
    articles: ArticleLite[];
}

export interface Article {
    title: string;
    id: number;
    url: string;
    locale: string;
    user_segment_id: number | null;
    permission_group_id: number;
    author_id: number;
    body: string;
    comments_disabled: boolean;
    content_tag_ids: number[];
    created_at: string;
    draft: boolean;
    edited_at: string;
    html_url: string;
    label_names: string[];
    outdated: boolean;
    outdated_locales: string[];
    position: number;
    promoted: boolean;
    section_id: number;
    source_locale: string;
    updated_at: string;
    vote_count: number;
    vote_sum: number;
}

export interface SingleArticleResponse {
    article: Article;
}

export interface ArticleInput {
    id: string;
}

export interface TicketCreate {
    ticket: {
        comment: { body?: string; html_body?: string };
        assignee_email?: string;
        assignee_id?: number;
        brand_id?: number;
        due_at?: string;
        type?: 'problem' | 'incident' | 'question' | 'task';
        status?: 'new' | 'open' | 'pending' | 'hold' | 'solved' | 'closed.';
        metadata?: { [key: string]: any };
    };
}

export interface CreatedTicket {
    id: string;
    url: string;
    created_at: string;
    updated_at: string;
    subject: string | null;
    description: string;
    priority: string | null;
    status: string;
}

export interface Via {
    channel: string;
    source: { from: Record<string, any>; to: Record<string, any>; rel: string | null };
}

export interface CustomFields {
    id: number;
    value: string | null;
}

export interface Ticket {
    url: string | null;
    id: number;
    external_id: string | null;
    via: Via | null;
    created_at: string | null;
    updated_at: string | null;
    generated_timestamp: number | null;
    type: string | null;
    subject: string | null;
    raw_subject: string | null;
    description: string | null;
    priority: string | null;
    status: string | null;
    recipient: string | null;
    requester_id: number | null;
    submitter_id: number | null;
    assignee_id: number | null;
    organization_id: number | null;
    group_id: number | null;
    collaborator_ids: number[] | null;
    follower_ids: number[] | null;
    email_cc_ids: number[] | null;
    forum_topic_id: string | null;
    problem_id: string | null;
    has_incidents: boolean | null;
    is_public: boolean | null;
    due_at: string | null;
    tags: string[] | null;
    custom_fields: CustomFields[] | null;
    satisfaction_rating: Record<string, any> | null;
    sharing_agreement_ids: number[] | null;
    custom_status_id: number | null;
    fields: CustomFields[] | null;
    followup_ids: number[] | null;
    ticket_form_id: number | null;
    brand_id: number | null;
    allow_channelback: boolean | null;
    allow_attachments: boolean | null;
    from_messaging_channel: boolean | null;
}

export interface SearchTicketInput {
    query: string;
}

export interface SearchTicket {
    id: string;
    url: string;
    external_id: string | null;
    requester_id: string;
    requester_name: string;
    assignee_id: string | null;
    assignee_name: string | null;
    assignee_avatar: string | null;
    status: string;
    created_at: string;
    updated_at: string;
    is_public: boolean;
    subject: string | null;
    description: string;
    priority: string | null;
    tags: string[];
}

export interface SearchTicketOutput {
    tickets: SearchTicket[];
}
