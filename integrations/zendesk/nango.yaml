integrations:
    zendesk:
        syncs:
            tickets:
                runs: every 1 hour
                description: |
                    Fetches a list of tickets from Zendesk
                output: Ticket
                sync_type: incremental
                endpoint:
                    method: GET
                    path: /tickets
                    group: Tickets
                version: 1.0.2
                scopes:
                    - tickets:read
            articles:
                runs: every 6 hours
                description: |
                    Fetches a list of articles in Help center from Zendesk
                output: Article
                sync_type: full
                track_deletes: true
                endpoint:
                    method: GET
                    path: /articles
                version: 1.0.2
                scopes:
                    - hc:read
            categories:
                runs: every 6 hours
                description: |
                    Fetches a list of help center categories
                output: Category
                sync_type: full
                track_deletes: true
                version: 1.0.1
                endpoint:
                    method: GET
                    path: /categories
                    group: Categories
                scopes:
                    - hc:read
            sections:
                runs: every 6 hours
                description: |
                    Fetches a list of sections in Help center from Zendesk
                output: Section
                sync_type: full
                track_deletes: true
                version: 1.0.1
                endpoint:
                    method: GET
                    path: /sections
                    group: Sections
                scopes:
                    - hc:read
            users:
                runs: every 6 hours
                description: |
                    Fetches a list of admin or agent users from Zendesk
                output: User
                sync_type: full
                version: 1.0.1
                track_deletes: true
                endpoint:
                    method: GET
                    path: /users
                scopes:
                    - users:read
        actions:
            fetch-articles:
                output: ArticleResponse
                endpoint:
                    method: GET
                    path: /all-articles
                description: Fetch all help center articles metadata
                version: 1.0.1
                scopes:
                    - hc:read
            fetch-article:
                output: SingleArticleResponse
                endpoint:
                    method: GET
                    path: /single-article
                input: ArticleInput
                description: Fetch a single full help center article
                scopes:
                    - hc:read
            create-section:
                output: Section
                input: SectionCreate
                endpoint:
                    method: POST
                    path: /sections
                    group: Sections
                description: Create a section within a category in the help center
                scopes:
                    - hc:write
            create-category:
                output: Category
                endpoint:
                    method: POST
                    path: /categories
                    group: Categories
                input: CategoryCreate
                description: Create a category within the help center
                scopes:
                    - hc:write
            create-ticket:
                output: CreatedTicket
                endpoint:
                    method: POST
                    path: /tickets
                    group: Tickets
                input: TicketCreate
                version: 1.0.2
                description: Create a Zendesk ticket
                scopes:
                    - tickets:write
            delete-user:
                output: SuccessResponse
                endpoint:
                    method: DELETE
                    path: /users
                    group: Users
                input: IdEntity
                description: Delete a user in Zendesk
                scopes:
                    - users:write
            create-user:
                output: User
                endpoint:
                    method: POST
                    path: /users
                    group: Users
                input: CreateUser
                description: Create an admin or agent user in Zendesk. Defaults to agent if a role is not provided
                scopes:
                    - users:write
            search-tickets:
                output: SearchTicketOutput
                endpoint:
                    method: GET
                    path: /search-tickets
                input: SearchTicketInput
                version: 1.0.2
                description: |
                    An action that performs a search for tickets in Zendesk based on the specified filter. It can take up to a few minutes for new tickets and users to be indexed for search. If new resources don't appear in your search results, wait a few minutes and try again.
                scopes:
                    - read
models:
    # Generic
    IdEntity:
        id: string
    SuccessResponse:
        success: boolean

    # Users
    CreateUser:
        firstName: string
        lastName: string
        email: string
        role?: admin | agent

    User:
        id: string
        firstName: string
        lastName: string
        email: string

    # Categories
    CategoryCreate:
        category:
            name: string
            description?: string
    Category:
        id: string
        url: string
        name: string
        description: string

    # Sections
    SectionCreate:
        category_id: number
        section:
            name: string
            description?: string
    Section:
        id: string
        url: string
        category_id: number
        name: string
        description: string

    # Articles
    ArticleResponse:
        articles: ArticleLite[]
    SingleArticleResponse:
        article: Article
    ArticleLite:
        title: string
        id: string
        url: string
    ArticleInput:
        id: string
    Article:
        __extends: ArticleLite
        id: number
        locale: string
        user_segment_id: number | null
        permission_group_id: number
        author_id: number
        body: string
        comments_disabled: boolean
        content_tag_ids: number[]
        created_at: string
        draft: boolean
        edited_at: string
        html_url: string
        label_names: string[]
        outdated: boolean
        outdated_locales: string[]
        position: number
        promoted: boolean
        section_id: number
        source_locale: string
        updated_at: string
        vote_count: number
        vote_sum: number

    # Tickets
    TicketCreate:
        ticket:
            comment:
                body?: string
                html_body?: string
            assignee_email?: string
            assignee_id?: number
            brand_id?: number
            due_at?: string
            type?: problem | incident | question | task
            status?: new | open | pending | hold | solved | closed.
            metadata?:
                __string: any
    CreatedTicket:
        id: string
        url: string
        created_at: string
        updated_at: string
        subject: string | null
        description: string
        priority: string | null
        status: string
    Ticket:
        url: string | null
        id: number
        external_id: string | null
        via: Via | null
        created_at: string | null
        updated_at: string | null
        generated_timestamp: number | null
        type: string | null
        subject: string | null
        raw_subject: string | null
        description: string | null
        priority: string | null
        status: string | null
        recipient: string | null
        requester_id: number | null
        submitter_id: number | null
        assignee_id: number | null
        organization_id: number | null
        group_id: number | null
        collaborator_ids: number[] | null
        follower_ids: number[] | null
        email_cc_ids: number[] | null
        forum_topic_id: string | null
        problem_id: string | null
        has_incidents: boolean | null
        is_public: boolean | null
        due_at: string | null
        tags: string[] | null
        custom_fields: CustomFields[] | null
        satisfaction_rating: object | null
        sharing_agreement_ids: number[] | null
        custom_status_id: number | null
        fields: CustomFields[] | null
        followup_ids: number[] | null
        ticket_form_id: number | null
        brand_id: number | null
        allow_channelback: boolean | null
        allow_attachments: boolean | null
        from_messaging_channel: boolean | null
    Via:
        channel: string
        source:
            from: object
            to: object
            rel: string | null

    CustomFields:
        id: number
        value: string | null

    # search-tickets
    SearchTicketInput:
        query: string

    SearchTicketOutput:
        tickets: SearchTicket[]

    SearchTicket:
        id: string
        url: string
        external_id: string | null
        requester_id: string
        requester_name: string
        assignee_id: string | null
        assignee_name: string | null
        assignee_avatar: string | null
        status: string
        created_at: string
        updated_at: string
        is_public: boolean
        subject: string | null
        description: string
        priority: string | null
        tags: string[]
