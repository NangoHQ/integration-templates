// Generated by ts-to-zod
import { z } from 'zod';

export const idEntitySchema = z.object({
    id: z.string()
});

export const successResponseSchema = z.object({
    success: z.boolean()
});

export const createUserSchema = z.object({
    first_name: z.string(),
    last_name: z.string(),
    email: z.string()
});

export const harvestCreateUserSchema = z.object({
    first_name: z.string(),
    last_name: z.string(),
    email: z.string(),
    timezone: z.string().optional(),
    has_access_to_all_future_projects: z.boolean().optional(),
    is_contractor: z.boolean().optional(),
    is_active: z.boolean().optional(),
    weekly_capacity: z.number().optional(),
    default_hourly_rate: z.literal('decimal').optional(),
    cost_rate: z.literal('decimal').optional(),
    roles: z.array(z.string()).optional(),
    access_roles: z
        .union([
            z.literal('administrator'),
            z.literal('manager'),
            z.literal('member'),
            z.literal('project_creator'),
            z.literal('billable_rates_manager'),
            z.literal('managed_projects_invoice_drafter'),
            z.literal('managed_projects_invoice_manager'),
            z.literal('client_and_task_manager'),
            z.literal('time_and_expenses_manager'),
            z.literal('estimates_manager')
        ])
        .optional()
});

export const userSchema = z.object({
    id: z.string(),
    email: z.string(),
    firstName: z.string(),
    lastName: z.string()
});
