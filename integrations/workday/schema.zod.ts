// Generated by ts-to-zod
import { z } from 'zod';

export const employeeSchema = z.object({
    id: z.string(),
    user_name: z.string().nullable(),
    first_name: z.string().optional(),
    last_name: z.string().optional(),
    active: z.union([z.boolean(), z.undefined()]).optional(),
    email: z.string(),
    role: z.string(),
    department: z.string(),
    site: z.string(),
    country: z.string().optional().nullable(),
    external_id: z.string().optional(),
    employment_relationship: z.string().optional(),
    phone_number: z.string().nullable()
});

export const groupSchema = z.object({
    id: z.string(),
    active: z.boolean(),
    created_at: z.string().nullable(),
    name: z.string()
});

export const companyLocationStateSchema = z.object({
    name: z.string(),
    abbrev: z.string(),
    iso_code: z.string()
});

export const locationSchema = z.object({
    id: z.string(),
    name: z.string(),
    description: z.string().nullable(),
    city: z.string().nullable(),
    state: companyLocationStateSchema.nullable(),
    country: z.object({
        name: z.string(),
        iso_code: z.string()
    }),
    zip_code: z.string(),
    address: z.string(),
    phone_number: z.string().nullable()
});

export const addressSchema = z.object({
    street: z.string(),
    city: z.string(),
    state: z.string(),
    country: z.string(),
    postalCode: z.string(),
    type: z.literal('AddressType')
});

export const workLocationSchema = z.object({
    name: z.string(),
    type: z.literal('LocationType'),
    primaryAddress: z.union([addressSchema, z.undefined()]).optional()
});

export const unifiedAddressSchema = z.object({
    street: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    country: z.string().optional(),
    postalCode: z.string().optional(),
    type: z.union([z.literal('WORK'), z.literal('HOME')])
});

export const phoneSchema = z.object({
    type: z.union([z.literal('WORK'), z.literal('HOME'), z.literal('MOBILE')]),
    number: z.string()
});

export const emailSchema = z.object({
    type: z.union([z.literal('WORK'), z.literal('PERSONAL')]),
    address: z.string()
});

export const standardEmployeeSchema = z.object({
    id: z.string(),
    firstName: z.string(),
    lastName: z.string(),
    email: z.string(),
    displayName: z.string(),
    employeeNumber: z.string().optional(),
    title: z.string().optional(),
    department: z.object({
        id: z.string(),
        name: z.string()
    }),
    employmentType: z.union([
        z.literal('FULL_TIME'),
        z.literal('PART_TIME'),
        z.literal('CONTRACTOR'),
        z.literal('INTERN'),
        z.literal('TEMPORARY'),
        z.literal('OTHER')
    ]),
    employmentStatus: z.union([z.literal('ACTIVE'), z.literal('TERMINATED'), z.literal('ON_LEAVE'), z.literal('SUSPENDED'), z.literal('PENDING')]),
    startDate: z.string(),
    terminationDate: z.string().optional(),
    manager: z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            email: z.string().optional()
        })
        .optional(),
    workLocation: z.object({
        name: z.string(),
        type: z.union([z.literal('OFFICE'), z.literal('REMOTE'), z.literal('HYBRID')]),
        primaryAddress: z.union([unifiedAddressSchema, z.undefined()]).optional()
    }),
    addresses: z.array(unifiedAddressSchema).optional(),
    phones: z.array(phoneSchema).optional(),
    emails: z.array(emailSchema).optional(),
    providerSpecific: z.record(z.any()),
    createdAt: z.string(),
    updatedAt: z.string()
});
