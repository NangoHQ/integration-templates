// Generated by ts-to-zod
import { z } from 'zod';

export const employeeSchema = z.object({
    id: z.string(),
    user_name: z.string().nullable(),
    first_name: z.string().optional(),
    last_name: z.string().optional(),
    active: z.union([z.boolean(), z.undefined()]).optional(),
    email: z.string(),
    role: z.string(),
    department: z.string(),
    site: z.string(),
    country: z.string().optional().nullable(),
    external_id: z.string().optional(),
    employment_relationship: z.string().optional(),
    phone_number: z.string().nullable()
});

export const groupSchema = z.object({
    id: z.string(),
    active: z.boolean(),
    created_at: z.string().nullable(),
    name: z.string()
});

export const companyLocationStateSchema = z.object({
    name: z.string(),
    abbrev: z.string(),
    iso_code: z.string()
});

export const locationSchema = z.object({
    id: z.string(),
    name: z.string(),
    description: z.string().nullable(),
    city: z.string().nullable(),
    state: companyLocationStateSchema.nullable(),
    country: z.object({
        name: z.string(),
        iso_code: z.string()
    }),
    zip_code: z.string(),
    address: z.string(),
    phone_number: z.string().nullable()
});

export const employmentTypeSchema = z.object({
    __enum: z.array(
        z.union([z.literal('FULL_TIME'), z.literal('PART_TIME'), z.literal('CONTRACTOR'), z.literal('INTERN'), z.literal('TEMPORARY'), z.literal('OTHER')])
    )
});

export const employmentStatusSchema = z.object({
    __enum: z.array(z.union([z.literal('ACTIVE'), z.literal('TERMINATED'), z.literal('ON_LEAVE'), z.literal('SUSPENDED'), z.literal('PENDING')]))
});

export const locationTypeSchema = z.object({
    __enum: z.array(z.union([z.literal('OFFICE'), z.literal('REMOTE'), z.literal('HYBRID')]))
});

export const addressTypeSchema = z.object({
    __enum: z.array(z.union([z.literal('WORK'), z.literal('HOME')]))
});

export const phoneTypeSchema = z.object({
    __enum: z.array(z.union([z.literal('WORK'), z.literal('HOME'), z.literal('MOBILE')]))
});

export const emailTypeSchema = z.object({
    __enum: z.array(z.union([z.literal('WORK'), z.literal('PERSONAL')]))
});

export const standardEmployeeSchema = z.object({
    id: z.string(),
    firstName: z.string(),
    lastName: z.string(),
    email: z.string(),
    displayName: z.string(),
    title: z.string(),
    department: z.object({
        id: z.string(),
        name: z.string()
    }),
    employmentType: employmentTypeSchema,
    employmentStatus: employmentStatusSchema,
    startDate: z.string(),
    terminationDate: z.string().optional(),
    manager: z
        .object({
            id: z.string(),
            firstName: z.string(),
            lastName: z.string(),
            email: z.string()
        })
        .optional(),
    workLocation: z.object({
        name: z.string(),
        type: locationTypeSchema,
        primaryAddress: z
            .object({
                street: z.string(),
                city: z.string(),
                state: z.string(),
                country: z.string(),
                postalCode: z.string(),
                type: addressTypeSchema
            })
            .optional()
    }),
    addresses: z.object({
        __array: z.object({
            street: z.string(),
            city: z.string(),
            state: z.string(),
            country: z.string(),
            postalCode: z.string(),
            type: addressTypeSchema
        })
    }),
    phones: z.object({
        __array: z.object({
            type: phoneTypeSchema,
            number: z.string()
        })
    }),
    emails: z.object({
        __array: z.object({
            type: emailTypeSchema,
            address: z.string()
        })
    }),
    providerSpecific: z.record(z.any()),
    createdAt: z.string(),
    updatedAt: z.string()
});
