// Generated by ts-to-zod
import { z } from 'zod';

export const githubIssueSchema = z.object({
    id: z.number(),
    owner: z.string(),
    repo: z.string(),
    issue_number: z.number(),
    title: z.string(),
    author: z.string(),
    author_id: z.string(),
    state: z.string(),
    date_created: z.date(),
    date_last_modified: z.date(),
    body: z.string()
});

export const issueSchema = z.object({
    id: z.number(),
    owner: z.string(),
    repo: z.string(),
    issue_number: z.number(),
    title: z.string(),
    author: z.string(),
    author_id: z.string(),
    state: z.string(),
    date_created: z.date(),
    date_last_modified: z.date(),
    body: z.string()
});

export const githubIssueRepoInputSchema = z.object({
    owner: z.string(),
    repo: z.string(),
    branch: z.string()
});

export const githubRepoSchema = z.object({
    id: z.number(),
    owner: z.string(),
    name: z.string(),
    full_name: z.string(),
    description: z.string(),
    url: z.string(),
    date_created: z.date(),
    date_last_modified: z.date()
});

export const githubRepoFileSchema = z.object({
    id: z.string(),
    name: z.string(),
    url: z.string(),
    last_modified_date: z.date()
});

export const githubWriteFileInputSchema = z.object({
    owner: z.string(),
    repo: z.string(),
    path: z.string(),
    message: z.string(),
    content: z.string(),
    sha: z.union([z.string(), z.undefined()])
});

export const githubWriteFileActionResultSchema = z.object({
    url: z.string(),
    status: z.string(),
    sha: z.string()
});
