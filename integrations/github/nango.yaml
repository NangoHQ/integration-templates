integrations:
    github:
        syncs:
            issues:
                runs: every half hour
                output: GithubIssue
                sync_type: full
                scopes: public_repo
                description: |
                    Fetches Github issues from all a user's repositories
                endpoint:
                    method: GET
                    path: /github/issues
            issues-lite:
                runs: every day
                auto_start: false
                sync_type: full
                output: Issue
                scopes: public_repo
                description: |
                    Fetches Github issues but up to a maximum of 15
                endpoint:
                    method: GET
                    path: /github/issues-lite
            list-files:
                runs: every hour
                description: |
                    Lists all the files of a Github repo given a specific branch
                sync_type: incremental
                auto_start: false
                input: GithubIssueRepoInput
                output: GithubRepoFile
                endpoint:
                    method: GET
                    path: /files
                    group: Files
                scopes: repo
                version: 1.0.0
            pull-requests:
                runs: every hour
                description: |
                    Get all pull requests from a Github repository.
                auto_start: false
                sync_type: incremental
                endpoint:
                    method: GET
                    path: /pull-requests
                    group: Pull Requests
                input: GithubMetadataInput
                output: GithubPullRequest
            commits:
                runs: every hour
                description: |
                    Get all pull commits from a Github repository.
                auto_start: false
                sync_type: incremental
                endpoint:
                    method: GET
                    path: /commits
                    group: Commits
                input: GithubMetadataInput
                output: GithubCommit

        actions:
            write-file:
                scopes: repo
                input: GithubWriteFileInput
                output: GithubWriteFileActionResult
                endpoint:
                    method: PUT
                    path: /files
                    group: Files
                description: |
                    Write content to a particular github file within a repo. If
                    the file doesn't exist it creates and then writes to it
                version: 1.0.0
            list-repos:
                scopes: read:org
                endpoint:
                    method: GET
                    path: /github/list-repos
                output: GithubRepo
                description: |
                    List github repos from an organization.
models:
    Issue:
        id: integer
        __extends: GithubIssue
    GithubIssueRepoInput:
        owner: string
        repo: string
        branch: string
    GithubIssue:
        id: integer
        owner: string
        repo: string
        issue_number: number
        title: string
        author: string
        author_id: string
        state: string
        date_created: date
        date_last_modified: date
        body: string
    GithubRepo:
        id: integer
        owner: string
        name: string
        full_name: string
        description: string
        url: string
        date_created: date
        date_last_modified: date
    GithubRepoFile:
        id: string
        name: string
        url: string
        last_modified_date: date
    GithubWriteFileInput:
        owner: string
        repo: string
        path: string
        message: string
        content: string
        sha: string | undefined
    GithubWriteFileActionResult:
        url: string
        status: string
        sha: string
    GithubMetadataInput:
        owner: string
        repo: string
        syncWindowMinutes?: number
        branch?: string
    GithubComment:
        id: string
        body: string
        user: GithubUser
        createdAt: string
    GithubUser:
        id: string
        url: string
    GithubCommit:
        id: string
        url: string
        branch: string
        author: GithubUser
        message: string
        date: string
    GithubPullRequest:
        id: string
        url: string
        state: string
        title: string
        user: GithubUser
        assignees: GithubUser[]
        reviewers: GithubUser[]
        draft: boolean
        labels: string[]
        reviewDecision: APPROVED | CHANGES_REQUESTED | REVIEW_REQUIRED
        latestComment: GithubComment
