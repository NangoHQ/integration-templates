// ---------------------------
// This file was generated by Nango (v0.56.4)
// You can version this file
// ---------------------------

export interface GithubIssue {
    id: number;
    owner: string;
    repo: string;
    issue_number: number;
    title: string;
    author: string;
    author_id: string;
    state: string;
    date_created: Date;
    date_last_modified: Date;
    body: string;
}

export interface Issue {
    id: number;
    owner: string;
    repo: string;
    issue_number: number;
    title: string;
    author: string;
    author_id: string;
    state: string;
    date_created: Date;
    date_last_modified: Date;
    body: string;
}

export interface GithubIssueRepoInput {
    owner: string;
    repo: string;
    branch: string;
}

export interface GithubRepo {
    id: number;
    owner: string;
    name: string;
    full_name: string;
    description: string;
    url: string;
    date_created: Date;
    date_last_modified: Date;
}

export interface GithubRepoFile {
    id: string;
    name: string;
    url: string;
    last_modified_date: Date;
}

export interface GithubWriteFileInput {
    owner: string;
    repo: string;
    path: string;
    message: string;
    content: string;
    sha: string | undefined;
}

export interface GithubWriteFileActionResult {
    url: string;
    status: string;
    sha: string;
}

export interface GithubConnectionMetadata {
    repo: string;
    connection_ids: string[];
    lastSyncCheckPoint?: { [key: string]: string | null };
}

export interface BaseInfo {
    id?: string;
    timestamp?: string;
    integrationId: string;
}

export interface BaseActivityData {
    timestamp: string;
    sourceId: string;
    sourceParentId?: string;
    platform: string;
    channel: string;
    title?: string;
    body?: string;
    url?: string;
    isContribution: boolean;
    type: string;
    score: number;
}

export interface PullRequestAttributesOpen {
    state: string;
    additions: number;
    deletions: number;
    changedFiles: number;
    authorAssociation: string;
    labels: string[];
}

export interface PullRequestAttributesReviewed {
    reviewState: string;
    state: string;
    additions: number;
    deletions: number;
    changedFiles: number;
    authorAssociation: string;
    labels: string[];
}

export interface Identity {
    platform: string;
    value: string;
    type: string;
    verified: boolean;
    sourceId: string;
}

export interface Member {
    displayName: string;
    identities: Identity[];
}

export interface GithubMemberAttributes {
    isHireable: boolean;
    url: string;
    bio: string;
    location: string;
    avatarUrl: string;
    company: string;
    isBot: boolean;
    websiteUrl?: string;
}

export interface GithubMember {
    displayName: string;
    identities: Identity[];
    attributes: GithubMemberAttributes;
}

export interface GithubPullRequest {
    id?: string;
    timestamp?: string;
    integrationId: string;
    activityData: {
        timestamp: string;
        sourceId: string;
        sourceParentId?: string;
        platform: string;
        channel: string;
        title?: string;
        body?: string;
        url?: string;
        isContribution: boolean;
        type: string;
        score: number;
        attributes?: PullRequestAttributesOpen | PullRequestAttributesReviewed;
        member: GithubMember;
        objectMembers?: GithubMember[] | undefined;
    };
}

export interface GithubPullRequestComment {
    id?: string;
    timestamp?: string;
    integrationId: string;
    activityData: {
        timestamp: string;
        sourceId: string;
        sourceParentId?: string;
        platform: string;
        channel: string;
        title?: string;
        body?: string;
        url?: string;
        isContribution: boolean;
        type: string;
        score: number;
        attributes?: PullRequestAttributesOpen | PullRequestAttributesReviewed;
        member: GithubMember;
        objectMembers?: GithubMember[] | undefined;
    };
}

export interface GithubPullRequestReviewThreadComment {
    id?: string;
    timestamp?: string;
    integrationId: string;
    activityData: {
        timestamp: string;
        sourceId: string;
        sourceParentId?: string;
        platform: string;
        channel: string;
        title?: string;
        body?: string;
        url?: string;
        isContribution: boolean;
        type: string;
        score: number;
        attributes?: PullRequestAttributesOpen | PullRequestAttributesReviewed;
        member: GithubMember;
        objectMembers?: GithubMember[] | undefined;
    };
}

export interface GithubCommit {
    id?: string;
    timestamp?: string;
    integrationId: string;
    activityData: {
        timestamp: string;
        sourceId: string;
        sourceParentId?: string;
        platform: string;
        channel: string;
        title?: string;
        body?: string;
        url?: string;
        isContribution: boolean;
        type: string;
        score: number;
        attributes: { insertions: number; deletions: number; lines: number; isMerge: boolean };
        member: GithubMember;
    };
    repos?: string[];
}
