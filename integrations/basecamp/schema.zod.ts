// Generated by ts-to-zod
import { z } from 'zod';

export const dockItemSchema = z.object({
    id: z.number(),
    title: z.string(),
    name: z.string(),
    enabled: z.boolean(),
    position: z.number().nullable(),
    url: z.string(),
    app_url: z.string()
});

export const basecampProjectSchema = z.object({
    id: z.number(),
    status: z.string(),
    created_at: z.string(),
    updated_at: z.string(),
    name: z.string(),
    description: z.string().nullable(),
    purpose: z.string(),
    clients_enabled: z.boolean(),
    timesheet_enabled: z.boolean().optional(),
    color: z.string().optional().nullable(),
    last_needle_color: z.string().optional().nullable(),
    last_needle_position: z.string().optional().nullable(),
    previous_needle_position: z.string().optional().nullable(),
    bookmark_url: z.string(),
    url: z.string(),
    app_url: z.string(),
    dock: z.array(dockItemSchema),
    bookmarked: z.boolean()
});

export const basecampProjectsResponseSchema = z.object({
    projects: z.array(basecampProjectSchema)
});

export const basecampCreateTodoInputSchema = z.object({
    projectId: z.number(),
    todoListId: z.number(),
    content: z.string(),
    description: z.string().optional(),
    due_on: z.string().optional(),
    starts_on: z.string().optional(),
    notify: z.boolean().optional(),
    assigneeEmails: z.array(z.string()).optional(),
    completionSubscriberEmails: z.array(z.string()).optional()
});

export const basecampTodoParentSchema = z.object({
    id: z.number(),
    title: z.string(),
    type: z.string(),
    url: z.string(),
    app_url: z.string()
});

export const basecampTodoBucketSchema = z.object({
    id: z.number(),
    name: z.string(),
    type: z.string()
});

export const basecampTodoResponseSchema = z.object({
    id: z.number(),
    status: z.string(),
    visible_to_clients: z.boolean(),
    created_at: z.string(),
    updated_at: z.string(),
    title: z.string(),
    inherits_status: z.boolean(),
    type: z.string(),
    url: z.string(),
    app_url: z.string(),
    bookmark_url: z.string(),
    subscription_url: z.string(),
    comments_count: z.number(),
    comments_url: z.string(),
    position: z.number(),
    parent: basecampTodoParentSchema,
    bucket: basecampTodoBucketSchema,
    creator: z.any(),
    description: z.string(),
    completed: z.boolean(),
    content: z.string(),
    starts_on: z.string(),
    due_on: z.string(),
    assignees: z.array(z.any()),
    completion_subscribers: z.array(z.any()),
    completion_url: z.string()
});

export const basecampPersonSchema = z.object({
    id: z.number(),
    name: z.string(),
    email_address: z.string(),
    avatar_url: z.string().optional(),
    admin: z.boolean().optional(),
    owner: z.boolean().optional(),
    created_at: z.string().optional(),
    updated_at: z.string().optional(),
    attachable_sgid: z.string().optional(),
    personable_type: z.string().optional(),
    title: z.string().optional().nullable(),
    bio: z.string().optional().nullable(),
    location: z.string().optional().nullable()
});

export const basecampTodoSchema = z.object({
    id: z.number(),
    content: z.string(),
    description: z.union([z.string(), z.undefined()]).optional(),
    due_on: z.union([z.string(), z.undefined()]).optional(),
    completed: z.boolean(),
    created_at: z.string(),
    updated_at: z.string(),
    bucket_id: z.number(),
    assignees: z.union([z.array(basecampPersonSchema), z.undefined()]).optional()
});

export const basecampCompanySchema = z.object({
    id: z.number(),
    name: z.string()
});

export const clientSideSchema = z.object({
    url: z.string(),
    app_url: z.string()
});

export const projectSchema = z.object({
    projectId: z.number(),
    todoSetId: z.number()
});

export const todosMetadataSchema = z.object({
    projects: z.array(projectSchema)
});
