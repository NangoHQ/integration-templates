// Generated by ts-to-zod
import { z } from 'zod';

export const optionSchema = z.object({
    id: z.number(),
    name: z.string()
});

export const bamboohrFieldSchema = z.object({
    id: z.string(),
    type: z.string(),
    name: z.string(),
    alias: z.string().optional(),
    options: z.array(optionSchema).optional()
});

export const bamboohrEmployeeSchema = z.object({
    id: z.string(),
    employeeNumber: z.string(),
    firstName: z.string(),
    lastName: z.string(),
    dateOfBirth: z.string(),
    address1: z.string(),
    bestEmail: z.string(),
    workEmail: z.string(),
    jobTitle: z.string(),
    hireDate: z.string(),
    supervisorId: z.string(),
    supervisor: z.string(),
    createdByUserId: z.string(),
    department: z.string(),
    division: z.string(),
    employmentHistoryStatus: z.string(),
    gender: z.string(),
    country: z.string(),
    city: z.string(),
    location: z.string(),
    state: z.string(),
    maritalStatus: z.string(),
    exempt: z.string(),
    payRate: z.string(),
    payType: z.string(),
    payPer: z.string(),
    ssn: z.string(),
    workPhone: z.string(),
    homePhone: z.string()
});

export const bamboohrCreateEmployeeSchema = z.object({
    firstName: z.string(),
    lastName: z.string(),
    employeeNumber: z.string().optional(),
    dateOfBirth: z.string().optional(),
    address1: z.string().optional(),
    bestEmail: z.string().optional(),
    workEmail: z.string().optional(),
    jobTitle: z.string().optional(),
    hireDate: z.string().optional(),
    supervisorId: z.string().optional(),
    supervisor: z.string().optional(),
    createdByUserId: z.string().optional(),
    department: z.string().optional(),
    division: z.string().optional(),
    employmentHistoryStatus: z.string().optional(),
    gender: z.string().optional(),
    country: z.string().optional(),
    city: z.string().optional(),
    location: z.string().optional(),
    state: z.string().optional(),
    maritalStatus: z.string().optional(),
    exempt: z.string().optional(),
    payRate: z.string().optional(),
    payType: z.string().optional(),
    payPer: z.string().optional(),
    ssn: z.string().optional(),
    workPhone: z.string().optional(),
    homePhone: z.string().optional()
});

export const bamboohrUpdateEmployeeSchema = z.object({
    id: z.string(),
    firstName: z.string().optional(),
    lastName: z.string().optional(),
    employeeNumber: z.string().optional(),
    dateOfBirth: z.string().optional(),
    address1: z.string().optional(),
    bestEmail: z.string().optional(),
    workEmail: z.string().optional(),
    jobTitle: z.string().optional(),
    hireDate: z.string().optional(),
    supervisorId: z.string().optional(),
    supervisor: z.string().optional(),
    createdByUserId: z.string().optional(),
    department: z.string().optional(),
    division: z.string().optional(),
    employmentHistoryStatus: z.string().optional(),
    gender: z.string().optional(),
    country: z.string().optional(),
    city: z.string().optional(),
    location: z.string().optional(),
    state: z.string().optional(),
    maritalStatus: z.string().optional(),
    exempt: z.string().optional(),
    payRate: z.string().optional(),
    payType: z.string().optional(),
    payPer: z.string().optional(),
    ssn: z.string().optional(),
    workPhone: z.string().optional(),
    homePhone: z.string().optional()
});

export const bamboohrResponseStatusSchema = z.object({
    status: z.string()
});

export const bamboohrCreateEmployeeResponseSchema = z.object({
    status: z.string(),
    id: z.string()
});

export const anonymousBamboohrbasicActionFetchfieldsOutputSchema = z.array(bamboohrFieldSchema);
