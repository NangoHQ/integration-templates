// Generated by ts-to-zod
import { z } from 'zod';

export const netsuiteMetadataSchema = z.object({
    timezone: z.union([z.string(), z.undefined()]).optional()
});

export const netsuiteAddressSchema = z.object({
    addressLine1: z.string().nullable(),
    addressLine2: z.string().nullable(),
    city: z.string().nullable(),
    zip: z.string().nullable(),
    country: z.string().nullable(),
    state: z.string().nullable()
});

export const netsuiteCustomerSchema = z.object({
    id: z.string(),
    externalId: z.string().nullable(),
    name: z.string(),
    email: z.string().nullable(),
    taxNumber: z.string().nullable(),
    phone: z.string().nullable(),
    addressLine1: z.string().nullable(),
    addressLine2: z.string().nullable(),
    city: z.string().nullable(),
    zip: z.string().nullable(),
    country: z.string().nullable(),
    state: z.string().nullable()
});

export const netsuiteCustomerCreateInputSchema = z.object({
    externalId: z.string(),
    name: z.string(),
    email: z.string().optional(),
    taxNumber: z.string().optional(),
    addressLine1: z.string().optional(),
    addressLine2: z.string().optional(),
    city: z.string().optional(),
    zip: z.string().optional(),
    country: z.string().optional(),
    state: z.string().optional(),
    phone: z.string().optional()
});

export const netsuiteCustomerCreateOutputSchema = z.object({
    id: z.string()
});

export const netsuiteCustomerUpdateInputSchema = z.object({
    externalId: z.string().optional(),
    name: z.string().optional(),
    email: z.string().optional(),
    taxNumber: z.string().optional(),
    addressLine1: z.string().optional(),
    addressLine2: z.string().optional(),
    city: z.string().optional(),
    zip: z.string().optional(),
    country: z.string().optional(),
    state: z.string().optional(),
    phone: z.string().optional(),
    id: z.string()
});

export const netsuiteCustomerUpdateOutputSchema = z.object({
    success: z.boolean()
});

export const netsuiteInvoiceLineSchema = z.object({
    itemId: z.string(),
    quantity: z.number(),
    amount: z.number(),
    vatCode: z.string().optional(),
    description: z.string().optional(),
    locationId: z.string().optional()
});

export const netsuiteCreditNoteSchema = z.object({
    id: z.string(),
    customerId: z.string(),
    currency: z.string(),
    description: z.string().nullable(),
    createdAt: z.string(),
    lines: z.array(netsuiteInvoiceLineSchema),
    total: z.number(),
    status: z.string()
});

export const netsuiteCreditNoteLineSchema = z.object({
    itemId: z.string(),
    quantity: z.number(),
    amount: z.number(),
    vatCode: z.string().optional(),
    description: z.string().optional()
});

export const netsuiteCreditNoteCreateInputSchema = z.object({
    customerId: z.string(),
    status: z.string(),
    currency: z.string(),
    description: z.string().optional(),
    lines: z.array(netsuiteCreditNoteLineSchema)
});

export const netsuiteCreditNoteCreateOutputSchema = z.object({
    id: z.string()
});

export const netsuiteCreditNoteUpdateInputSchema = z.object({
    customerId: z.string(),
    status: z.string(),
    currency: z.string(),
    description: z.string().optional(),
    lines: z.array(netsuiteCreditNoteLineSchema),
    id: z.string()
});

export const netsuiteCreditNoteUpdateOutputSchema = z.object({
    success: z.boolean()
});

export const netsuiteInvoiceSchema = z.object({
    id: z.string(),
    customerId: z.string(),
    currency: z.string(),
    description: z.string().nullable(),
    createdAt: z.string(),
    lines: z.array(netsuiteInvoiceLineSchema),
    total: z.number(),
    status: z.string()
});

export const netsuiteInvoiceCreateInputSchema = z.object({
    customerId: z.string(),
    currency: z.string(),
    description: z.string().optional(),
    status: z.string(),
    lines: z.array(netsuiteInvoiceLineSchema)
});

export const netsuiteInvoiceCreateOutputSchema = z.object({
    id: z.string()
});

export const netsuiteInvoiceUpdateInputSchema = z.object({
    customerId: z.string().optional(),
    currency: z.string().optional(),
    description: z.string().optional(),
    status: z.string(),
    lines: z.array(netsuiteInvoiceLineSchema),
    id: z.string(),
    locationId: z.string().optional()
});

export const netsuiteInvoiceUpdateOutputSchema = z.object({
    success: z.boolean()
});

export const netsuitePaymentSchema = z.object({
    id: z.string(),
    description: z.string().optional(),
    customerId: z.string().nullable(),
    amount: z.number().nullable(),
    createdAt: z.string().nullable(),
    currency: z.string().nullable(),
    paymentReference: z.string().nullable(),
    status: z.string().nullable(),
    applyTo: z.array(z.string())
});

export const netsuitePaymentCreateInputSchema = z.object({
    customerId: z.string(),
    amount: z.number(),
    currency: z.string(),
    paymentReference: z.string(),
    applyTo: z.array(z.string()),
    status: z.string(),
    description: z.string().optional()
});

export const netsuitePaymentCreateOutputSchema = z.object({
    id: z.string()
});

export const netsuitePaymentUpdateInputSchema = z.object({
    customerId: z.string(),
    amount: z.number().optional(),
    currency: z.string().optional(),
    paymentReference: z.string().optional(),
    applyTo: z.array(z.string()).optional(),
    status: z.string().optional(),
    description: z.string().optional(),
    id: z.string()
});

export const netsuitePaymentUpdateOutputSchema = z.object({
    success: z.boolean()
});

export const netsuiteLocationSchema = z.object({
    id: z.string(),
    isInactive: z.boolean(),
    name: z.string(),
    lastModifiedDate: z.string(),
    address: z.object({
        address1: z.string(),
        addressee: z.string(),
        addressText: z.string(),
        city: z.string(),
        country: z.string(),
        state: z.string(),
        zip: z.string()
    }),
    returnAddress: z.object({
        addressText: z.string(),
        country: z.string()
    }),
    timeZone: z.string().optional().nullable(),
    useBins: z.boolean()
});

export const ledgerLineSchema = z.object({
    journalLineId: z.string(),
    accountId: z.string(),
    accountName: z.string(),
    cleared: z.boolean(),
    credit: z.number().optional(),
    debit: z.number().optional(),
    description: z.string()
});

export const generalLedgerSchema = z.object({
    id: z.string(),
    date: z.string(),
    transactionId: z.string(),
    void: z.boolean(),
    approved: z.boolean(),
    currency: z.string(),
    createdDate: z.string(),
    updatedDate: z.string(),
    isReversal: z.boolean(),
    subsidiary: z.object({
        id: z.string(),
        name: z.string()
    }),
    lines: z.array(ledgerLineSchema)
});

export const inventoryDetailSchema = z.object({
    binNumber: z.string().optional(),
    expirationDate: z.string().optional(),
    quantity: z.number().optional(),
    serialNumber: z.string().optional(),
    toBinNumber: z.string().optional()
});

export const purchaseOrderLineSchema = z.object({
    itemId: z.string(),
    quantity: z.number(),
    amount: z.number(),
    description: z.string().optional(),
    locationId: z.string().optional(),
    rate: z.number().optional(),
    department: z.string().optional(),
    class: z.string().optional(),
    createWorkOrder: z.boolean().optional(),
    inventoryDetail: inventoryDetailSchema.optional().nullable()
});

export const taxDetailsSchema = z.object({
    taxCode: z.string().optional(),
    taxRate: z.number().optional()
});

export const addressSchema = z.object({
    addr1: z.string().optional(),
    addr2: z.string().optional(),
    addr3: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    zip: z.string().optional(),
    country: z.string().optional()
});

export const netsuitePurchaseOrderCreateInputSchema = z.object({
    vendorId: z.string(),
    currency: z.string().optional(),
    description: z.string().optional(),
    status: z.string(),
    tranDate: z.string().optional(),
    dueDate: z.string().optional(),
    lines: z.array(purchaseOrderLineSchema),
    customForm: z.string().optional(),
    location: z.string().optional(),
    subsidiary: z.string().optional(),
    department: z.string().optional(),
    class: z.string().optional(),
    taxDetails: taxDetailsSchema.optional().nullable(),
    billingAddress: addressSchema.optional(),
    shippingAddress: addressSchema.optional()
});

export const netsuitePurchaseOrderCreateOutputSchema = z.object({
    id: z.string()
});

export const netsuitePurchaseOrderUpdateInputSchema = z.object({
    id: z.string(),
    vendorId: z.string().optional(),
    currency: z.string().optional(),
    description: z.string().optional(),
    status: z.string().optional(),
    tranDate: z.string().optional(),
    dueDate: z.string().optional(),
    lines: z.array(purchaseOrderLineSchema).optional(),
    customForm: z.string().optional(),
    location: z.string().optional(),
    subsidiary: z.string().optional(),
    department: z.string().optional(),
    class: z.string().optional(),
    billingAddress: addressSchema.optional().nullable(),
    shippingAddress: addressSchema.optional().nullable(),
    taxDetails: taxDetailsSchema.optional().nullable()
});

export const netsuitePurchaseOrderUpdateOutputSchema = z.object({
    success: z.boolean()
});

export const netsuiteBillLineSchema = z.object({
    itemId: z.string(),
    quantity: z.number(),
    amount: z.number(),
    description: z.string().optional(),
    rate: z.number().optional(),
    locationId: z.string().optional(),
    departmentId: z.string().optional(),
    classId: z.string().optional(),
    customerId: z.string().optional(),
    isBillable: z.boolean().optional(),
    taxDetails: z
        .object({
            taxCode: z.string().optional(),
            taxRate: z.number().optional()
        })
        .optional(),
    inventoryDetail: z
        .object({
            binNumber: z.string().optional(),
            expirationDate: z.string().optional(),
            quantity: z.number().optional(),
            serialNumber: z.string().optional()
        })
        .optional()
});

export const netsuiteBillCreateInputSchema = z.object({
    vendorId: z.string(),
    tranDate: z.string(),
    currency: z.string(),
    dueDate: z.string().optional(),
    status: z.string().optional(),
    memo: z.string().optional(),
    externalId: z.string().optional(),
    location: z.string().optional(),
    subsidiary: z.string().optional(),
    department: z.string().optional(),
    class: z.string().optional(),
    terms: z.string().optional(),
    lines: z.array(netsuiteBillLineSchema),
    billingAddress: z
        .object({
            addr1: z.string().optional(),
            addr2: z.string().optional(),
            addr3: z.string().optional(),
            city: z.string().optional(),
            state: z.string().optional(),
            zip: z.string().optional(),
            country: z.string().optional()
        })
        .optional(),
    taxDetails: z
        .object({
            taxCode: z.string().optional(),
            taxRate: z.number().optional()
        })
        .optional()
});

export const netsuiteBillCreateOutputSchema = z.object({
    id: z.string()
});

export const netsuiteBillUpdateInputSchema = z.object({
    id: z.string(),
    vendorId: z.string().optional(),
    tranDate: z.string().optional(),
    currency: z.string().optional(),
    dueDate: z.string().optional(),
    status: z.string().optional(),
    memo: z.string().optional(),
    externalId: z.string().optional(),
    location: z.string().optional(),
    subsidiary: z.string().optional(),
    department: z.string().optional(),
    class: z.string().optional(),
    terms: z.string().optional(),
    lines: z.array(netsuiteBillLineSchema).optional(),
    billingAddress: z
        .object({
            addr1: z.string().optional(),
            addr2: z.string().optional(),
            addr3: z.string().optional(),
            city: z.string().optional(),
            state: z.string().optional(),
            zip: z.string().optional(),
            country: z.string().optional()
        })
        .optional(),
    taxDetails: z
        .object({
            taxCode: z.string().optional(),
            taxRate: z.number().optional()
        })
        .optional()
});

export const netsuiteBillUpdateOutputSchema = z.object({
    success: z.boolean()
});

export const fetchFieldsInputSchema = z.object({
    name: z.string()
});

export const fetchFieldsOutputSchema = z.object({
    id: z.string().optional(),
    schema: z.string().optional(),
    title: z.string().optional(),
    description: z.string().optional(),
    type: z.union([z.string(), z.array(z.string())]).optional(),
    properties: z.record(z.string(), z.any()).optional(),
    required: z.array(z.string()).optional(),
    items: z.unknown().optional(),
    enum: z.array(z.any()).optional(),
    definitions: z.record(z.string(), z.any()).optional(),
    additionalProperties: z.union([z.boolean(), z.unknown()]).optional(),
    default: z.any().optional()
});
