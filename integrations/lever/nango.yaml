integrations:
    # NOTE: if you're using this in your nango-integrations directory this
    # should be your integration id. This variable is only replaced in the
    # context of this repository
    ${PWD}:
        actions:
            create-note:
                description: |
                    Action to create a note and add it to a candidate profile in Lever
                output: LeverOpportunityNote
                input: LeverCreateNoteInput
                endpoint:
                    method: POST
                    path: /lever/create-note
                scopes:
                    - notes:write:admin
            create-opportunity:
                description: |
                    Action to create candidates and opportunities in Lever
                output: LeverOpportunity
                input: LeverCreateOpportunityInput
                endpoint:
                    method: POST
                    path: /opportunities
                    group: Opportunities
                scopes:
                    - opportunities:write:admin
                version: 1.0.0
            get-stages:
                description: |
                    Action to get lists all pipeline stages in your Lever account.
                output: GetStages
                endpoint:
                    method: GET
                    path: /stages
                    group: Opportunities
            users:
                description: |
                    Lists all the users in your Lever account. Only active users are included by default..
                output: SuccessResponse
                endpoint:
                    method: GET
                    path: /users
                    group: Users
            get-postings:
                description: |
                    Get all Posts for your account in Lever
                output: SuccessResponse
                endpoint:
                    method: GET
                    path: /posts/single
                    group: Posts
            get-archive-reasons:
                description: |
                    Get all Posts for your account in Lever
                output: SuccessResponse
                endpoint:
                    method: GET
                    path: /archived/reasons
                    group: Opportunities
            posting:
                description: |
                    Get single posts for your account in Lever
                output: SuccessResponse
                input: SinglePost
                endpoint:
                    method: GET
                    path: /posts
                    group: Posts
            update-opportunity-links:
                description: |
                    Update the links in an opportunity
                output: SuccessResponse
                input: UpdateLinks
                endpoint:
                    method: POST
                    path: /links
                    group: Opportunities
            update-opportunity-sources:
                description: |
                    Update the sources in an opportunity
                output: SuccessResponse
                input: UpdateSources
                endpoint:
                    method: POST
                    path: /sources
                    group: Opportunities
            update-opportunity-stage:
                description: |
                    Update the stage in an opportunity
                output: SuccessResponse
                input: UpdateOpportunityStage
                endpoint:
                    method: POST
                    path: /stages
                    group: Opportunities
            update-opportunity-tags:
                description: |
                    Update the tags in an opportunity
                output: SuccessResponse
                input: UpdateTags
                endpoint:
                    method: POST
                    path: /tags
                    group: Opportunities
            update-opportunity-archived:
                description: |
                    Update the tags in an opportunity
                output: SuccessResponse
                input: ArchiveOpportunity
                endpoint:
                    method: PUT
                    path: /archived
                    group: Opportunities
            apply-posting:
                description: |
                    submit an application on behalf of a candidate. his endpoint can only be used to submit applications to published or unlisted postings
                output: SuccessResponse
                input: ApplyToPosting
                endpoint:
                    method: POST
                    path: /posts/apply
                    group: Posts
            update-opportunity:
                description: |
                    Update an opportunity
                output: object[] | ReturnObjUpdateOpportunity
                input: UpdateLinks
                endpoint:
                    method: POST
                    path: /opportunity/update
                    group: Opportunities

        syncs:
            opportunities:
                runs: every 6 hours
                description: |
                    Fetches a list of all pipeline opportunities for contacts in Lever
                output: LeverOpportunity
                sync_type: incremental
                endpoint:
                    method: GET
                    path: /opportunities
                    group: Opportunities
                scopes:
                    - opportunities:read:admin
            opportunities-applications:
                runs: every 6 hours
                description: |
                    Fetches a list of all applications for a candidate in Lever
                output: LeverOpportunityApplication
                sync_type: full
                endpoint:
                    method: GET
                    path: /lever/opportunities-applications
                scopes:
                    - applications:read:admin
            opportunities-feedbacks:
                runs: every 6 hours
                description: |
                    Fetches a list of all feedback forms for a candidate for a specific Opportunity in lever
                output: LeverOpportunityFeedback
                sync_type: full
                endpoint:
                    method: GET
                    path: /lever/opportunities-feedbacks
                scopes:
                    - feedback:read:admin
            opportunities-interviews:
                runs: every 6 hours
                description: |
                    Fetches a list of all interviewers for a specific Opportunity in lever
                output: LeverOpportunityInterview
                sync_type: full
                endpoint:
                    method: GET
                    path: /lever/opportunities-interviews
                scopes:
                    - interviews:read:admin
            opportunities-notes:
                runs: every 6 hours
                description: |
                    Fetches a list of all notes for a specific candidate in lever
                output: LeverOpportunityNote
                sync_type: full
                endpoint:
                    method: GET
                    path: /lever/opportunities-notes
                scopes:
                    - notes:read:admin
            opportunities-offers:
                runs: every 6 hours
                description: |
                    Fetches a list of all offers for a specific candidate in lever.
                output: LeverOpportunityOffer
                sync_type: full
                endpoint:
                    method: GET
                    path: /lever/opportunities-offers
                scopes:
                    - offers:write:admin
            postings:
                runs: every 6 hours
                description: |
                    Fetches a list of all postings in Lever
                output: LeverPosting
                sync_type: full
                endpoint:
                    method: GET
                    path: /lever/postings
                scopes:
                    - postings:read:admin
            postings-apply:
                runs: every 6 hours
                description: |
                    Fetches a list of all questions included in a postingâ€™s application form in Lever
                output: LeverPostingApply
                sync_type: full
                endpoint:
                    method: GET
                    path: /lever/postings-apply
                scopes:
                    - postings:read:admin
            stage:
                runs: every 6 hours
                description: |
                    Fetches a list of all pipeline stages in Lever
                output: LeverStage
                sync_type: full
                endpoint:
                    method: GET
                    path: /lever/stage
                scopes:
                    - stages:read:admin
models:
    LeverOpportunity:
        id: string
        name: string
        headline: string
        contact: string
        emails: string[]
        phones: string[]
        confidentiality: string
        location: string
        links: string[]
        archived:
            reason: string
            archivedAt: number
        createdAt: number
        updatedAt: number
        lastInteractionAt: number
        lastAdvancedAt: number
        snoozedUntil: number
        archivedAt: number
        archiveReason: string
        stage: string
        stageChanges: string[]
        owner: string
        tags: string[]
        sources: string[]
        origin: string
        sourcedBy: string
        applications: string[]
        resume: string
        followers: string[]
        urls:
            list: string
            show: string
        dataProtection: object
        isAnonymized: boolean
        opportunityLocation: string
    LeverOpportunityApplication:
        id: string
        opportunityId: string
        candidateId: string
        createdAt: number
        type: string
        posting: string
        postingHiringManager: string
        postingOwner: string
        user: string
        name: string
        email: string
        phone:
            type: string
            value: string
        requisitionForHire:
            id: string
            requisitionCode: string
            hiringManagerOnHire: string
        ownerId: string
        hiringManager: string
        company: string
        links: string[]
        comments: string
        customQuestions: string[]
        archived:
            reason: string
            archivedAt: number
    LeverOpportunityFeedback:
        id: string
        type: string
        text: string
        instructions: string
        fields: string[]
        baseTemplateId: string
        interview: string
        panel: string
        user: string
        createdAt: number
        completedAt: number
        updatedAt: number
        deletedAt: number
    LeverOpportunityInterview:
        id: string
        panel: string
        subject: string
        note: string
        interviewers: string[]
        timezone: string
        createdAt: number
        date: number
        duration: number
        location: string
        feedbackTemplate: string
        feedbackForms: string[]
        feedbackReminder: string
        user: string
        stage: string
        canceledAt: number
        postings: string[]
        gcalEventUrl: string
    LeverOpportunityNote:
        id: string
        text: string
        fields: string[]
        user: string
        secret: boolean
        completedAt: number
        createdAt: number
        deletedAt: number
    LeverOpportunityOffer:
        id: string
        createdAt: number
        status: string
        creator: string
        fields: string[]
        sentDocument:
            fileName: string
            uploadedAt: number
            downloadUrl: string
        signedDocument:
            fileName: string
            uploadedAt: number
            downloadUrl: string
    LeverPosting:
        perform_as?: string
        id: string
        text: string
        createdAt: number
        updatedAt: number
        user: string
        owner: string
        hiringManager: string
        confidentiality: string
        categories:
            team: string
            department: string
            location: string
            allLocations: string[]
            commitment: string
            level: string
        content:
            description: string
            descriptionHtml: string
            lists: string[]
            closing: string
            closingHtml: string
        country: string
        followers: string[]
        tags: string[]
        state: string
        distributionChannels: string[]
        reqCode: string
        requisitionCodes: string[]
        salaryDescription: string
        salaryDescriptionHtml: string
        salaryRange:
            max: number
            min: number
            currency: string
            interval: string
        urls:
            list: string
            show: string
            apply: string
        workplaceType: string
    LeverPostingApply:
        id: string
        text: string
        customQuestions: string[]
        eeoQuestions: string[]
        personalInformation: string[]
        urls: string[]
    LeverStage:
        id: string
        text: string
    LeverCreateNoteInput:
        opportunityId: string
        perform_as: string | undefined
        note_id: string | undefined
        value: string | undefined
        secret: boolean | undefined
        score: number | undefined
        notifyFollowers: boolean | undefined
        createdAt: number | undefined
    PhoneEntry:
        value: string | undefined
        type: string | undefined
    ArchievedEntry:
        archivedAt: number | undefined
        reason: string | undefined
    LeverCreateOpportunityInput:
        perform_as: string
        parse: boolean | undefined
        perform_as_posting_owner: boolean | undefined
        name: string | undefined
        headline: string | undefined
        stage: string | undefined
        location: string | undefined
        phones: PhoneEntry[] | undefined
        emails: string | undefined
        links: string[] | undefined
        tags: string[] | undefined
        sources: string[] | undefined
        origin: string | undefined
        owner: string | undefined
        followers: string[] | undefined
        postings: string[] | undefined
        createdAt: number | undefined
        archived: ArchievedEntry | undefined
        contact: string[] | undefined
    UpdateOpportunityStage:
        perform_as?: string
        stage: string
        opportunityId: string
    ArchiveOpportunity:
        perform_as?: string
        reason: string
        requisitionId?: string
        opportunityId: string
        cleanInterviews?: boolean
    ArchiveObject:
        reason: string
        cleanInterviews?: boolean
        requisitionId?: string
    UpdateLinks:
        perform_as?: string
        links: string[]
        opportunityId: string
        delete: boolean
    UpdateTags:
        opportunityId: string
        perform_as?: string
        tags: string[]
        delete: boolean
    UpdateSources:
        opportunityId: string
        perform_as?: string
        sources: string[]
        delete: boolean
    Stages:
        id: string
        text: string
    GetStages:
        stages: Stages[]
    Users:
        id: string
        name: string
        username: string
        email: string
        accessRole: string
        photo: string | null
        createdAt: number
        deactivatedAt: string | null
        externalDirectoryId: string | null
        linkedContactIds: string[] | null
        jobTitle: string | null
        managerId: string | null
    GetUsers:
        users: Users[]
    SuccessResponse:
        success: boolean
        opportunityId?: string
        response?: LeverOpportunity
    ApplyCandidate:
        send_confirmation_email?: boolean
        customQuestions: any[]
        personalInformation: any[]
        eeoResponses: object
        urls: any[]
        ipAddress?: string
        source?: string
        consent?: object
        diversitySurvey?: object
        origin?: string
    PostingCategories:
        team: string
        department: string
        location?: string
        commitment?: string
        allLocations?: string[]
    ContentList:
        text: string
        content: string
    PostingContent:
        descriptionHtml: string
        lists?: ContentList[]
        closingPostingHtml?: string
    SinglePost:
        id: string
    QuestionResponse:
        name: string
        value: string
    ApplyToPosting:
        postId: string
        send_confirmation_email?: boolean
        personalInformation: QuestionResponse[]
        eeoResponses: object
        urls?: QuestionResponse[]
        CustomQuestions?: CustomQuestion[]
        ipAddress?: string
        source?: string
        consent?:
            marketing:
                provided: boolean
                compliancePolicyId: string
            store:
                provided: boolean
                compliancePolicyId: string
        diversitySurvey?:
            surveyId: string
            candidateSelectedLocation: string
            responses: DiversityQuestionResponse[]
        origin?: string
    CustomQuestionResponse:
        value: string
    CustomQuestion:
        id: string
        fields: CustomQuestionResponse[]
    DiversityQuestionResponse:
        questionId: string
        questionText: string
        questionType: string
        answer: string
    UpdateOpportunity:
        opportunityId: string;
        perform_as?: string;
        delete?: boolean;
        links?: string[];
        sources?: string[];
        stage?: string;
        tags?: string[];
        reason?: string
        cleanInterviews?: boolean
        requisitionId?: string
    ReturnObjUpdateOpportunity:
        success: boolean
        opportunityId?: string
        response?: object[] | LeverOpportunity
