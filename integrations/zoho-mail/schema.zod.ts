// Generated by ts-to-zod
import { z } from 'zod';

export const zohoMailTaskSchema = z.object({
    id: z.string(),
    serviceType: z.number(),
    modifiedTime: z.date(),
    resourceId: z.string(),
    attachments: z.array(z.any()),
    statusStr: z.string(),
    statusValue: z.number(),
    description: z.string(),
    project: z.object({
        name: z.string(),
        id: z.string()
    }),
    isTaskPublished: z.boolean(),
    title: z.string(),
    createdAt: z.date(),
    portalId: z.number(),
    serviceId: z.string(),
    owner: z.object({
        name: z.string(),
        id: z.number()
    }),
    assigneeList: z.array(z.string()),
    dependency: z.array(z.any()),
    subtasks: z.array(z.any()),
    priority: z.string(),
    tags: z.array(z.string()),
    followers: z.array(z.string()),
    namespaceId: z.string(),
    dependents: z.array(z.string()),
    assignee: z.object({
        name: z.string(),
        id: z.number()
    }),
    serviceUniqId: z.number(),
    depUniqId: z.string(),
    status: z.string()
});

export const zohoMailEmailSchema = z.object({
    id: z.string(),
    summary: z.string(),
    sentDateInGMT: z.string(),
    calendarType: z.number(),
    subject: z.string(),
    messageId: z.string(),
    flagid: z.string(),
    status2: z.string(),
    priority: z.string(),
    hasInline: z.string(),
    toAddress: z.string(),
    folderId: z.string(),
    ccAddress: z.string(),
    hasAttachment: z.string(),
    size: z.string(),
    sender: z.string(),
    receivedTime: z.string(),
    fromAddress: z.string(),
    status: z.string()
});

export const zohoMailSendEmailInputSchema = z.object({
    accountId: z.string(),
    fromAddress: z.string(),
    toAddress: z.string(),
    ccAddress: z.string(),
    bccAddress: z.string(),
    subject: z.string(),
    encoding: z.string(),
    mailFormat: z.string(),
    askReceipt: z.string()
});

export const zohoMailSendEmailOutputSchema = z.object({
    status: z.record(z.string(), z.any()),
    data: z.record(z.string(), z.any())
});

export const zohoMailAddUserInputSchema = z.object({
    zoid: z.number(),
    primaryEmailAddress: z.string(),
    password: z.string(),
    displayName: z.string(),
    role: z.string(),
    country: z.string(),
    language: z.string(),
    timeZone: z.string(),
    oneTimePassword: z.boolean(),
    groupMailList: z.array(z.string())
});

export const zohoMailAddUserOutputSchema = z.object({
    status: z.record(z.string(), z.any()),
    data: z.record(z.string(), z.any())
});
