// Generated by ts-to-zod
import { z } from 'zod';

export const idEntitySchema = z.object({
    id: z.string()
});

export const connectionMetadataSchema = z.object({
    company: z.string()
});

export const invoiceLineItemTierSchema = z.object({
    unitCount: z.string(),
    unitAmount: z.string(),
    totalAmount: z.number()
});

export const invoiceLineItemSchema = z.object({
    id: z.union([z.string(), z.undefined()]).optional(),
    billingItemId: z.union([z.string(), z.undefined()]).optional().nullable(),
    name: z.string(),
    description: z.string().nullable(),
    unitsCount: z.number(),
    unitAmount: z.string(),
    taxAmount: z.number(),
    taxRate: z.string(),
    amount: z.union([z.number(), z.undefined()]).optional(),
    amountExcludingTax: z.number(),
    periodStart: z.string().nullable(),
    periodEnd: z.string().nullable(),
    invoiceLineItemTiers: z.array(invoiceLineItemTierSchema)
});

export const invoiceCouponSchema = z.object({
    name: z.string(),
    discountAmount: z.number()
});

export const invoiceSchema = z.object({
    id: z.string(),
    invoiceNumber: z.string(),
    emissionDate: z.string(),
    dueDate: z.string(),
    status: z.union([
        z.literal('to_pay'),
        z.literal('partially_paid'),
        z.literal('paid'),
        z.literal('late'),
        z.literal('grace_period'),
        z.literal('to_pay_batch'),
        z.literal('voided')
    ]),
    taxRate: z.string(),
    currency: z.string(),
    invoiceLineItems: z.array(invoiceLineItemSchema),
    coupons: z.array(invoiceCouponSchema),
    type: z.union([z.literal('invoice'), z.literal('refund')]),
    discountAmount: z.number()
});

export const addressSchema = z.object({
    line1: z.string().optional(),
    city: z.string().optional(),
    region: z.string().optional(),
    country: z.string().optional(),
    postalCode: z.string().optional()
});

export const createTransactionSchema = z.object({
    invoice: invoiceSchema,
    externalCustomerId: z.string(),
    addresses: z.object({
        singleLocation: addressSchema.optional(),
        shipFrom: addressSchema.optional(),
        shipTo: addressSchema.optional(),
        pointOfOrderOrigin: addressSchema.optional(),
        pointOfOrderAcceptance: addressSchema.optional(),
        goodsPlaceOrServiceRendered: addressSchema.optional(),
        import: addressSchema.optional(),
        billTo: addressSchema.optional()
    })
});

export const transactionCodeSchema = z.object({
    transactionCode: z.string()
});
