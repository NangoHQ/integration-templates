// ---------------------------
// This file was generated by Nango (v0.68.1)
// You can version this file
// ---------------------------

export interface SyncMetadata_avalara_transactions {
  company: string;
  backfillPeriodMs?: number | undefined;
};

export interface Transaction {
  id: string;
  code: string;
  companyId: number;
  date: string;
  paymentDate: string;
  status: string;
  type: string;
  batchCode: string;
  currencyCode: string;
  exchangeRateCurrencyCode: string;
  customerUsageType: string;
  entityUseCode: string;
  customerVendorCode: string;
  customerCode: string;
  exemptNo: string;
  reconciled: boolean;
  locationCode: string;
  reportingLocationCode: string;
  purchaseOrderNo: string;
  referenceCode: string;
  salespersonCode: string;
  taxOverrideType: string;
  taxOverrideAmount: number;
  taxOverrideReason: string;
  totalAmount: number;
  totalExempt: number;
  totalDiscount: number;
  totalTax: number;
  totalTaxable: number;
  totalTaxCalculated: number;
  adjustmentReason: string;
  adjustmentDescription: string;
  locked: boolean;
  region: string;
  country: string;
  version: number;
  softwareVersion: string;
  originAddressId: number;
  destinationAddressId: number;
  exchangeRateEffectiveDate: string;
  exchangeRate: number;
  isSellerImporterOfRecord: boolean;
  description: string;
  email: string;
  businessIdentificationNo: string;
  modifiedDate: string;
  modifiedUserId: number;
  taxDate: string;
  lines: ({  id: number;
  transactionId: number;
  lineNumber: string;
  boundaryOverrideId: number;
  entityUseCode: string;
  description: string;
  destinationAddressId: number;
  originAddressId: number;
  discountAmount: number;
  discountTypeId: number;
  exemptAmount: number;
  exemptCertId: number;
  exemptNo: string;
  isItemTaxable: boolean;
  isSSTP: boolean;
  itemCode: string;
  lineAmount: number;
  quantity: number;
  ref1: string;
  reportingDate: string;
  revAccount: string;
  sourcing: string;
  tax: number;
  taxableAmount: number;
  taxCalculated: number;
  taxCode: string;
  taxDate: string;
  taxEngine: string;
  taxOverrideType: string;
  taxOverrideAmount: number;
  taxOverrideReason: string;
  taxIncluded: boolean;
  details: ({  id: number;
  transactionLineId: number;
  transactionId: number;
  addressId: number;
  country: string;
  region: string;
  stateFIPS: string;
  exemptAmount: number;
  exemptReasonId: number;
  exemptRuleId: number;
  inState: boolean;
  jurisCode: string;
  jurisName: string;
  jurisdictionId: number;
  signatureCode: string;
  stateAssignedNo: string;
  jurisType: string;
  nonTaxableAmount: number;
  nonTaxableRuleId: number;
  nonTaxableType: string;
  rate: number;
  rateRuleId: number;
  rateSourceId: number;
  serCode: string;
  sourcing: string;
  tax: number;
  taxableAmount: number;
  taxType: string;
  taxName: string;
  taxAuthorityTypeId: number;
  taxRegionId: number;
  taxCalculated: number;
  taxOverride: number;
  rateType: string;
  taxableUnits: number;
  nonTaxableUnits: number;
  exemptUnits: number;
  reportingTaxableUnits: number;
  reportingNonTaxableUnits: number;
  reportingExemptUnits: number;
  reportingTax: number;
  reportingTaxCalculated: number;
  recoverabilityPercentage: number;
  recoverableAmount: number;
  nonRecoverableAmount: number;})[];
  vatNumberTypeId: number;
  recoverabilityPercentage: number;
  recoverableAmount: number;
  nonRecoverableAmount: number;})[];
  locationTypes: any[];
  messages: string[];
  summary: string[];
  addresses: ({  id: number;
  transactionId: number;
  boundaryLevel: string;
  line1: string;
  city: string;
  region: string;
  postalCode: string;
  country: string;
  taxRegionId: number;})[];
  taxDetailsByTaxType: ({  taxType: string;
  totalTaxable: number;
  totalExempt: number;
  totalNonTaxable: number;
  totalTax: number;})[];
};

export interface ActionInput_avalara_createtransaction {
  invoice: {  id: string;
  invoiceNumber: string;
  emissionDate: string;
  dueDate: string;
  status: 'to_pay' | 'partially_paid' | 'paid' | 'late' | 'grace_period' | 'to_pay_batch' | 'voided';
  taxRate: string;
  currency: string;
  invoiceLineItems: ({  id?: string | undefined;
  billingItemId?: string | null | undefined;
  name: string;
  description: string | null;
  unitsCount: number;
  unitAmount: string;
  taxAmount: number;
  taxRate: string;
  amount?: number | undefined;
  amountExcludingTax: number;
  periodStart: string | null;
  periodEnd: string | null;
  invoiceLineItemTiers: ({  unitCount: string;
  unitAmount: string;
  totalAmount: number;})[];})[];
  coupons: ({  name: string;
  discountAmount: number;})[];
  type: 'invoice' | 'refund';
  discountAmount: number;};
  externalCustomerId: string;
  companyCode?: string | undefined;
  addresses: {  singleLocation: {  line1?: string | undefined;
  city?: string | undefined;
  region?: string | undefined;
  country?: string | undefined;
  postalCode?: string | undefined;};
  shipFrom: {  line1?: string | undefined;
  city?: string | undefined;
  region?: string | undefined;
  country?: string | undefined;
  postalCode?: string | undefined;};
  shipTo: {  line1?: string | undefined;
  city?: string | undefined;
  region?: string | undefined;
  country?: string | undefined;
  postalCode?: string | undefined;};
  pointOfOrderOrigin: {  line1?: string | undefined;
  city?: string | undefined;
  region?: string | undefined;
  country?: string | undefined;
  postalCode?: string | undefined;};
  pointOfOrderAcceptance: {  line1?: string | undefined;
  city?: string | undefined;
  region?: string | undefined;
  country?: string | undefined;
  postalCode?: string | undefined;};
  goodsPlaceOrServiceRendered: {  line1?: string | undefined;
  city?: string | undefined;
  region?: string | undefined;
  country?: string | undefined;
  postalCode?: string | undefined;};
  import: {  line1?: string | undefined;
  city?: string | undefined;
  region?: string | undefined;
  country?: string | undefined;
  postalCode?: string | undefined;};
  billTo: {  line1?: string | undefined;
  city?: string | undefined;
  region?: string | undefined;
  country?: string | undefined;
  postalCode?: string | undefined;};};
};

export interface ActionOutput_avalara_createtransaction {
  id: string;
};

export interface ActionInput_avalara_committransaction {
  transactionCode: string;
};

export interface ActionOutput_avalara_committransaction {
  id: string;
};

export interface ActionInput_avalara_voidtransaction {
  transactionCode: string;
};

export interface ActionOutput_avalara_voidtransaction {
  id: string;
};
