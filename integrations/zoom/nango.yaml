integrations:
    zoom:
        actions:
            create-user:
                description: Creates a user in Zoom. Requires Pro account or higher
                output: User
                endpoint:
                    method: POST
                    path: /users
                    group: Users
                input: ZoomCreateUser
                scopes:
                    - user:write
                    - user:write:admin
            delete-user:
                description: Deletes a user in Zoom. Requires Pro account or higher
                endpoint:
                    method: DELETE
                    path: /users
                    group: Users
                output: SuccessResponse
                input: IdEntity
                scopes:
                    - user:write
                    - user:write:admin
            create-meeting:
                description: Creates a meeting in Zoom.
                endpoint:
                    method: POST
                    path: /meetings
                    group: Meetings
                output: Meeting
                input: CreateMeeting
                scopes:
                    - meeting:write
            delete-meeting:
                description: Deletes a meeting in Zoom
                endpoint:
                    method: DELETE
                    path: /meetings
                    group: Meetings
                output: SuccessResponse
                input: IdEntity
                scopes:
                    - meeting:write
        syncs:
            users:
                runs: every day
                description: |
                    Fetches a list of users from Zoom
                output: User
                track_deletes: true
                sync_type: full
                endpoint:
                    method: GET
                    path: /users
                    group: Users
                scopes:
                    - user:read
                    - user:read:admin
            meetings:
                runs: every day
                description: |
                    Fetches a list of meetings from Zoom
                output: Meeting
                track_deletes: true
                sync_type: full
                endpoint:
                    method: GET
                    path: /meetings
                    group: Meetings
                scopes:
                    - meeting:read
            recording-files:
                runs: every day
                description: |
                    Fetchees a list of recordings from Zoom
                output: RecordingFile
                track_deletes: true
                sync_type: full
                endpoint:
                    method: GET
                    path: /recording-files
                    group: Cloud Recordings
                scopes:
                    - cloud_recording:read:list_user_recordings
                    - cloud_recording:read:list_recording_files

models:
    # Generic
    IdEntity:
        id: string
    SuccessResponse:
        success: boolean
    ActionResponseError:
        message: string

    # Users
    CreateUser:
        firstName: string
        lastName: string
        email: string
    ZoomCreateUser:
        __extends: CreateUser
        action?: create | autoCreate | custCreate | ssoCreate
        display_name?: string
        type?: basic | licensed | UnassignedWithoutMeetingsBasic | None
    User:
        id: string
        firstName: string
        lastName: string
        email: string

    # Meetings
    Meeting:
        id: string
        topic: string
        startTime: string
        duration: number
        timezone: string
        joinUrl: string
        createdAt: string
    CreateMeeting:
        topic: string
        type: instant | scheduled | recurringNoFixed | recurring | screenShareOnly
        agenda?: string
        default_password?: boolean
        duration?: number
        password?: string
        pre_schedule?: boolean
        recurrence?:
            end_date_time?: string
            end_times?: number
            monthly_day?: number
            monthly_week?: number
            monthly_week_day?: number
            repeat_interval?: number
            type?: daily | weekly | monthly
            weekly_days?: sunday | monday | tuesday | wednesday | thursday | friday | saturday
        settings?:
            host_video?: boolean
            participant_video?: boolean
            join_before_host?: boolean
            mute_upon_entry?: boolean
            approval_type?: automatic | manually | notRequired
            registration_type?: registerOnceAttendAny | registerEveryTime | registerOnceSelectOccurrences
            audio?: both | telephony | voip | thirdParty
            auto_recording?: local | cloud | none
            waiting_room: boolean
        schedule_for?: string
        start_time?: string
        template_id?: string
        timezone?: string

    # Recordings
    RecordingFile:
        id: string
        deletedTime: string
        downloadUrl: string
        filePath: string
        fileSize: number
        fileType: MP4 | M4A | CHAT | TRANSCRIPT | CSV | TB | CC | CHAT_MESSAGE | SUMMARY
        fileExtension: MP4 | M4A | TXT | VTT | CSV | JSON | JPG
        meetingId: string
        playUrl: string
        recordingEnd: string
        recordingStart: string
        recordingType: shared_screen_with_speaker_view(CC) | shared_screen_with_speaker_view | shared_screen_with_gallery_view | active_speaker | gallery_view | shared_screen | audio_only | audio_transcript | chat_file | poll | host_video | closed_caption | timeline | thumbnail | audio_interpretation | summary | summary_next_steps | summary_smart_chapters | sign_interpretation | production_studio
        status: completed
        autoDelete: boolean
        autoDeleteDate: string
        playPasscode: string
