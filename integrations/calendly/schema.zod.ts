// Generated by ts-to-zod
import { z } from 'zod';

export const userSchema = z.object({
    id: z.string(),
    email: z.string(),
    firstName: z.string(),
    lastName: z.string()
});

export const eventLocationSchema = z.object({
    type: z.string(),
    location: z.string().optional(),
    join_url: z.string().optional(),
    status: z.string().nullable(),
    additional_info: z.string()
});

export const inviteesCounterSchema = z.object({
    total: z.number(),
    active: z.number(),
    limit: z.number()
});

export const eventMembershipSchema = z.object({
    user: z.string(),
    user_email: z.string().nullable(),
    user_name: z.string()
});

export const eventGuestSchema = z.object({
    email: z.string(),
    created_at: z.string(),
    updated_at: z.string()
});

export const calendarEventSchema = z.object({
    kind: z.string(),
    external_id: z.string()
});

export const eventCancellationSchema = z.object({
    canceled_by: z.string(),
    reason: z.string().nullable(),
    canceler_type: z.string(),
    created_at: z.string()
});

export const eventSchema = z.object({
    id: z.string(),
    uri: z.string(),
    name: z.string().nullable(),
    meeting_notes_plain: z.string().nullable(),
    meeting_notes_html: z.string().nullable(),
    status: z.union([z.literal('active'), z.literal('canceled')]),
    start_time: z.string(),
    end_time: z.string(),
    event_type: z.string(),
    location: eventLocationSchema,
    invitees_counter: inviteesCounterSchema,
    created_at: z.string(),
    updated_at: z.string(),
    event_memberships: z.array(eventMembershipSchema),
    event_guests: z.array(eventGuestSchema),
    calendar_event: calendarEventSchema.nullable(),
    cancellation: eventCancellationSchema.optional()
});

export const eventTypeLocationSchema = z.object({
    kind: z.string(),
    phone_number: z.number(),
    additional_info: z.string()
});

export const eventQuestionSchema = z.object({
    name: z.string(),
    type: z.string(),
    position: z.number(),
    enabled: z.boolean(),
    required: z.boolean(),
    answer_choices: z.array(z.string()),
    include_other: z.boolean()
});

export const eventProfileSchema = z.object({
    type: z.string(),
    name: z.string(),
    owner: z.string()
});

export const eventTypeSchema = z.object({
    id: z.string(),
    uri: z.string(),
    name: z.string().nullable(),
    active: z.boolean(),
    booking_method: z.string(),
    slug: z.string().nullable(),
    scheduling_url: z.string(),
    duration: z.number(),
    kind: z.string(),
    pooling_type: z.string().nullable(),
    type: z.string(),
    color: z.string(),
    created_at: z.string(),
    updated_at: z.string(),
    internal_note: z.string().nullable(),
    description_plain: z.string(),
    description_html: z.string(),
    profile: z.literal('Profile').nullable(),
    secret: z.boolean(),
    deleted_at: z.string().nullable(),
    admin_managed: z.boolean(),
    locations: z.array(eventTypeLocationSchema).nullable(),
    custom_questions: z.array(eventQuestionSchema),
    position: z.number()
});

export const questionAndAnswerSchema = z.object({
    answer: z.string(),
    position: z.number(),
    question: z.string()
});

export const trackingSchema = z.object({
    utm_campaign: z.string().nullable(),
    utm_source: z.string().nullable(),
    utm_medium: z.string().nullable(),
    utm_content: z.string().nullable(),
    utm_term: z.string().nullable(),
    salesforce_uuid: z.string().nullable()
});

export const paymentSchema = z.object({
    external_id: z.string(),
    provider: z.string(),
    amount: z.number(),
    currency: z.string(),
    terms: z.string(),
    successful: z.boolean()
});

export const reconfirmationSchema = z.object({
    created_at: z.string(),
    confirmed_at: z.string()
});

export const eventInviteeSchema = z.object({
    id: z.string(),
    cancel_url: z.string(),
    created_at: z.string(),
    email: z.string(),
    event: z.string(),
    name: z.string(),
    first_name: z.string().nullable(),
    last_name: z.string().nullable(),
    new_invitee: z.string().nullable(),
    old_invitee: z.string().nullable(),
    questions_and_answers: z.array(questionAndAnswerSchema),
    reschedule_url: z.string(),
    rescheduled: z.boolean(),
    status: z.string(),
    text_reminder_number: z.string().nullable(),
    timezone: z.string(),
    tracking: trackingSchema,
    updated_at: z.string(),
    uri: z.string(),
    cancellation: eventCancellationSchema.optional(),
    routing_form_submission: z.string().nullable(),
    payment: paymentSchema.nullable(),
    no_show: z.string().nullable(),
    reconfirmation: reconfirmationSchema.nullable(),
    scheduling_method: z.string().nullable(),
    invitee_scheduled_by: z.string().nullable()
});
