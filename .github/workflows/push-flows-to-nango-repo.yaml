name: Push flows to Nango repo

on:
    push:
        branches:
            - main

concurrency:
    group: push-flows-${{ github.event.pull_request.number || github.ref }}
    cancel-in-progress: true

jobs:
    push_to_nango_repo:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout the current repository
              uses: actions/checkout@v3

            - name: Log current branch and repository
              run: |
                  echo "Current branch: ${{ github.ref }}"
                  echo "Repository: ${{ github.repository }}"

            - name: Check for changes in flows.yaml
              id: changes
              uses: tj-actions/changed-files@v41
              with:
                  files: 'flows.yaml'

            - name: Debug - Log if flows.yaml has changed
              run: |
                  if [ "${{ steps.changes.outputs.any_changed }}" == "true" ]; then
                    echo "flows.yaml has changed."
                  else
                    echo "No changes detected in flows.yaml."
                  fi

            - name: Generate GitHub App Token
              if: steps.changes.outputs.any_changed == 'true'
              id: generate_token
              uses: tibdex/github-app-token@v1
              with:
                  app_id: ${{ secrets.GH_APP_PUSHER_ID }}
                  private_key: ${{ secrets.GH_APP_PUSHER_PRIVATE_KEY }}

            - name: Debug - Log token generation status
              if: steps.changes.outputs.any_changed == 'true'
              run: |
                  echo "GitHub App token generated."

            - name: Clone the target repository and copy the flows.yaml file
              if: steps.changes.outputs.any_changed == 'true'
              run: |
                  echo "Cloning the target repository..."
                  git clone https://x-access-token:${{ steps.generate_token.outputs.token }}@github.com/NangoHQ/nango.git
                  echo "Repository cloned."
                  echo "Copying flows.yaml into the nango repository."
                  cp flows.yaml nango/packages/shared/flows.yaml
                  echo "flows.yaml file copied."

            - name: Debug - Log nango directory contents
              if: steps.changes.outputs.any_changed == 'true'
              run: |
                  echo "Contents of nango directory after copying flows.yaml:"
                  ls nango/

            - name: Get PR Details
              if: github.event_name == 'pull_request'
              id: pr_details
              run: |
                  # Extract the PR URL and description from the event payload
                  PR_URL=${{ github.event.pull_request.html_url }}
                  PR_BODY=${{ github.event.pull_request.body }}

                  # Write the PR URL and description to the GITHUB_OUTPUT environment file
                  echo "pr_url=$PR_URL" >> $GITHUB_OUTPUT
                  echo "pr_body=$PR_BODY" >> $GITHUB_OUTPUT

            - name: Make changes and commit
              if: steps.changes.outputs.any_changed == 'true'
              working-directory: nango
              run: |
                  echo "Configuring Git and committing changes..."
                  git config --global user.email "github-actions[bot]@users.noreply.github.com"
                  git config --global user.name "GitHub Actions Bot"

                  # Add the changes
                  git add packages/shared/flows.yaml

                  # Commit with a message that includes the PR link and description
                  git commit -m "chore(integration-templates): Automated commit updating flows.yaml from the integration-templates ${{ steps.pr_details.outputs.pr_url }} Description: ${{ steps.pr_details.outputs.pr_body }}"

                  echo "Changes committed."

            - name: Push changes to target repo
              if: steps.changes.outputs.any_changed == 'true'
              working-directory: nango
              run: |
                  echo "Pushing changes to target repository..."
                  git push origin master
                  echo "Changes pushed successfully."
