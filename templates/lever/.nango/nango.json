[
    {
        "providerConfigKey": "lever",
        "syncs": [
            {
                "name": "opportunities",
                "type": "sync",
                "description": "Fetches all opportunities",
                "sync_type": "incremental",
                "usedModels": ["LeverOpportunity"],
                "runs": "every 6 hours",
                "version": "",
                "track_deletes": false,
                "auto_start": true,
                "input": null,
                "output": ["LeverOpportunity"],
                "scopes": ["opportunities:read:admin"],
                "endpoints": [
                    {
                        "method": "GET",
                        "path": "/opportunities",
                        "group": "Opportunities"
                    }
                ],
                "webhookSubscriptions": []
            },
            {
                "name": "opportunities-applications",
                "type": "sync",
                "description": "Fetches a list of all applications for a candidate in Lever",
                "sync_type": "full",
                "usedModels": ["LeverOpportunityApplication"],
                "runs": "every 6 hours",
                "version": "1.0.1",
                "track_deletes": false,
                "auto_start": true,
                "input": null,
                "output": ["LeverOpportunityApplication"],
                "scopes": ["applications:read:admin"],
                "endpoints": [
                    {
                        "method": "GET",
                        "path": "/applications",
                        "group": "Applications"
                    }
                ],
                "webhookSubscriptions": []
            },
            {
                "name": "opportunities-feedbacks",
                "type": "sync",
                "description": "Fetches a list of all feedback forms for a candidate for every single opportunity",
                "sync_type": "full",
                "usedModels": ["LeverOpportunityFeedback"],
                "runs": "every 6 hours",
                "version": "",
                "track_deletes": false,
                "auto_start": true,
                "input": null,
                "output": ["LeverOpportunityFeedback"],
                "scopes": ["feedback:read:admin"],
                "endpoints": [
                    {
                        "method": "GET",
                        "path": "/opportunities/feedback",
                        "group": "Opportunities"
                    }
                ],
                "webhookSubscriptions": []
            },
            {
                "name": "opportunities-interviews",
                "type": "sync",
                "description": "Fetches a list of all interviews for every single opportunity",
                "sync_type": "full",
                "usedModels": ["LeverOpportunityInterview"],
                "runs": "every 6 hours",
                "version": "1.0.1",
                "track_deletes": false,
                "auto_start": true,
                "input": null,
                "output": ["LeverOpportunityInterview"],
                "scopes": ["interviews:read:admin"],
                "endpoints": [
                    {
                        "method": "GET",
                        "path": "/opportunities/interviews",
                        "group": "Opportunities"
                    }
                ],
                "webhookSubscriptions": []
            },
            {
                "name": "opportunities-notes",
                "type": "sync",
                "description": "Fetches a list of all notes for every single opportunity",
                "sync_type": "full",
                "usedModels": ["LeverOpportunityNote"],
                "runs": "every 6 hours",
                "version": "1.0.1",
                "track_deletes": false,
                "auto_start": true,
                "input": null,
                "output": ["LeverOpportunityNote"],
                "scopes": ["notes:read:admin"],
                "endpoints": [
                    {
                        "method": "GET",
                        "path": "/notes",
                        "group": "Notes"
                    }
                ],
                "webhookSubscriptions": []
            },
            {
                "name": "opportunities-offers",
                "type": "sync",
                "description": "Fetches a list of all offers for every single opportunity",
                "sync_type": "full",
                "usedModels": ["LeverOpportunityOffer"],
                "runs": "every 6 hours",
                "version": "1.0.1",
                "track_deletes": false,
                "auto_start": true,
                "input": null,
                "output": ["LeverOpportunityOffer"],
                "scopes": ["offers:write:admin"],
                "endpoints": [
                    {
                        "method": "GET",
                        "path": "/offers",
                        "group": "Offers"
                    }
                ],
                "webhookSubscriptions": []
            },
            {
                "name": "postings",
                "type": "sync",
                "description": "Fetches a list of all postings in Lever",
                "sync_type": "full",
                "usedModels": ["LeverPosting"],
                "runs": "every 6 hours",
                "version": "1.0.1",
                "track_deletes": false,
                "auto_start": true,
                "input": null,
                "output": ["LeverPosting"],
                "scopes": ["postings:read:admin"],
                "endpoints": [
                    {
                        "method": "GET",
                        "path": "/postings",
                        "group": "Postings"
                    }
                ],
                "webhookSubscriptions": []
            },
            {
                "name": "postings-questions",
                "type": "sync",
                "description": "Fetches a list of all questions included in a postingâ€™s application form in Lever",
                "sync_type": "full",
                "usedModels": ["LeverPostingApply"],
                "runs": "every 6 hours",
                "version": "1.0.1",
                "track_deletes": false,
                "auto_start": true,
                "input": null,
                "output": ["LeverPostingApply"],
                "scopes": ["postings:read:admin"],
                "endpoints": [
                    {
                        "method": "GET",
                        "path": "/postings/questions",
                        "group": "Postings"
                    }
                ],
                "webhookSubscriptions": []
            },
            {
                "name": "stages",
                "type": "sync",
                "description": "Fetches a list of all pipeline stages in Lever",
                "sync_type": "full",
                "usedModels": ["LeverStage"],
                "runs": "every 6 hours",
                "version": "1.0.1",
                "track_deletes": false,
                "auto_start": true,
                "input": null,
                "output": ["LeverStage"],
                "scopes": ["stages:read:admin"],
                "endpoints": [
                    {
                        "method": "GET",
                        "path": "/stages",
                        "group": "Stages"
                    }
                ],
                "webhookSubscriptions": []
            }
        ],
        "actions": [
            {
                "name": "create-note",
                "type": "action",
                "description": "Action to create a note and add it to an opportunity.",
                "version": "1.0.1",
                "scopes": ["notes:write:admin"],
                "input": "LeverCreateNoteInput",
                "output": ["LeverOpportunityNote"],
                "usedModels": ["LeverOpportunityNote", "LeverCreateNoteInput"],
                "endpoint": {
                    "method": "POST",
                    "path": "/notes",
                    "group": "Notes"
                }
            },
            {
                "name": "create-opportunity",
                "type": "action",
                "description": "Create an opportunity and optionally candidates associated with the opportunity",
                "version": "1.0.1",
                "scopes": ["opportunities:write:admin"],
                "input": "LeverCreateOpportunityInput",
                "output": ["LeverOpportunity"],
                "usedModels": ["LeverOpportunity", "LeverCreateOpportunityInput", "PhoneEntry", "ArchievedEntry"],
                "endpoint": {
                    "method": "POST",
                    "path": "/opportunities",
                    "group": "Opportunities"
                }
            },
            {
                "name": "get-stages",
                "type": "action",
                "description": "Action to get lists all pipeline stages. Note that this does \nnot paginate the response so it is possible that not all stages \nare returned.",
                "version": "1.0.1",
                "scopes": [],
                "input": null,
                "output": ["GetStages"],
                "usedModels": ["GetStages", "Stages"],
                "endpoint": {
                    "method": "GET",
                    "path": "/stages/limited",
                    "group": "Stages"
                }
            },
            {
                "name": "users",
                "type": "action",
                "description": "Lists all the users in your Lever account. Only active users are included by default.",
                "version": "",
                "scopes": [],
                "input": null,
                "output": ["SuccessResponse"],
                "usedModels": ["SuccessResponse", "LeverOpportunity"],
                "endpoint": {
                    "method": "GET",
                    "path": "/users",
                    "group": "Users"
                }
            },
            {
                "name": "get-postings",
                "type": "action",
                "description": "Get all posts for your account. Note that this does\nnot paginate the response so it is possible that not all postings \nare returned.",
                "version": "1.0.1",
                "scopes": [],
                "input": null,
                "output": ["SuccessResponse"],
                "usedModels": ["SuccessResponse", "LeverOpportunity"],
                "endpoint": {
                    "method": "GET",
                    "path": "/posts/limited",
                    "group": "Posts"
                }
            },
            {
                "name": "get-archive-reasons",
                "type": "action",
                "description": "Get all archived reasons",
                "version": "",
                "scopes": [],
                "input": null,
                "output": ["SuccessResponse"],
                "usedModels": ["SuccessResponse", "LeverOpportunity"],
                "endpoint": {
                    "method": "GET",
                    "path": "/archived/reasons",
                    "group": "Archived"
                }
            },
            {
                "name": "get-posting",
                "type": "action",
                "description": "Get single post for your account in Lever",
                "version": "1.0.1",
                "scopes": [],
                "input": "SinglePost",
                "output": ["SuccessResponse"],
                "usedModels": ["SuccessResponse", "LeverOpportunity", "SinglePost"],
                "endpoint": {
                    "method": "GET",
                    "path": "/posts/single",
                    "group": "Posts"
                }
            },
            {
                "name": "update-opportunity-links",
                "type": "action",
                "description": "Update the links in an opportunity",
                "version": "1.0.1",
                "scopes": [],
                "input": "UpdateLinks",
                "output": ["SuccessResponse"],
                "usedModels": ["SuccessResponse", "LeverOpportunity", "UpdateLinks"],
                "endpoint": {
                    "method": "POST",
                    "path": "/opportunities/links",
                    "group": "Opportunities"
                }
            },
            {
                "name": "update-opportunity-sources",
                "type": "action",
                "description": "Update the sources in an opportunity",
                "version": "1.0.1",
                "scopes": [],
                "input": "UpdateSources",
                "output": ["SuccessResponse"],
                "usedModels": ["SuccessResponse", "LeverOpportunity", "UpdateSources"],
                "endpoint": {
                    "method": "POST",
                    "path": "/opportunities/sources",
                    "group": "Opportunities"
                }
            },
            {
                "name": "update-opportunity-stage",
                "type": "action",
                "description": "Update the stage in an opportunity",
                "version": "1.0.1",
                "scopes": [],
                "input": "UpdateOpportunityStage",
                "output": ["SuccessResponse"],
                "usedModels": ["SuccessResponse", "LeverOpportunity", "UpdateOpportunityStage"],
                "endpoint": {
                    "method": "POST",
                    "path": "/opportunities/stages",
                    "group": "Opportunities"
                }
            },
            {
                "name": "update-opportunity-tags",
                "type": "action",
                "description": "Update the tags in an opportunity",
                "version": "1.0.1",
                "scopes": [],
                "input": "UpdateTags",
                "output": ["SuccessResponse"],
                "usedModels": ["SuccessResponse", "LeverOpportunity", "UpdateTags"],
                "endpoint": {
                    "method": "POST",
                    "path": "/opportunities/tags",
                    "group": "Opportunities"
                }
            },
            {
                "name": "update-opportunity-archived",
                "type": "action",
                "description": "Update the archived state of an opportunity",
                "version": "1.0.1",
                "scopes": [],
                "input": "ArchiveOpportunity",
                "output": ["SuccessResponse"],
                "usedModels": ["SuccessResponse", "LeverOpportunity", "ArchiveOpportunity"],
                "endpoint": {
                    "method": "PUT",
                    "path": "/opportunities/archived",
                    "group": "Opportunities"
                }
            },
            {
                "name": "apply-posting",
                "type": "action",
                "description": "Submit an application on behalf of a candidate. This endpoint can only be used to submit applications to published or unlisted postings.",
                "version": "",
                "scopes": [],
                "input": "ApplyToPosting",
                "output": ["SuccessResponse"],
                "usedModels": [
                    "SuccessResponse",
                    "LeverOpportunity",
                    "ApplyToPosting",
                    "QuestionResponse",
                    "CustomQuestion",
                    "CustomQuestionResponse",
                    "DiversityQuestionResponse"
                ],
                "endpoint": {
                    "method": "POST",
                    "path": "/posts/apply",
                    "group": "Posts"
                }
            },
            {
                "name": "update-opportunity",
                "type": "action",
                "description": "Update an opportunity",
                "version": "",
                "scopes": [],
                "input": "UpdateOpportunity",
                "output": ["ReturnObjUpdateOpportunity"],
                "usedModels": ["ReturnObjUpdateOpportunity", "StageChangesObject", "UpdateOpportunity"],
                "endpoint": {
                    "method": "PATCH",
                    "path": "/opportunities",
                    "group": "Opportunities"
                }
            }
        ],
        "onEventScripts": {
            "post-connection-creation": [],
            "pre-connection-deletion": []
        }
    }
]
