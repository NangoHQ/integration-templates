// ---------------------------
// This file was generated by Nango (v0.64.1)
// You can version this file
// ---------------------------

export interface SyncMetadata_ashby_candidates {
  candidatelastsyncToken: string;
};

export interface AshbyCandidate {
  id: string;
  createdAt: Date;
  name: string;
  primaryEmailAddress: {  value: string;
  type: string;
  isPrimary: boolean;};
  emailAddresses: string[];
  primaryPhoneNumber: {  value: string;
  type: string;
  isPrimary: boolean;};
  phoneNumbers: string[];
  socialLinks: string[];
  tags: string[];
  position: string;
  company: string;
  school: string;
  applicationIds: string[];
  resumeFileHandle: {  id: string;
  name: string;
  handle: string;};
  fileHandles: string[];
  customFields: string[];
  profileUrl: string;
  source: {  id: string;
  title: string;
  isArchived: boolean;
  sourceType: {  id: string;
  title: string;
  isArchived: boolean;};};
  creditedToUser: {  id: string;
  firstName: string;
  lastName: string;
  email: string;
  globalRole: string;
  isEnabled: boolean;
  updatedAt: Date;};
};

export interface SyncMetadata_ashby_jobs {
  jobslastsyncToken: string;
};

export interface AshbyJob {
  id: string;
  title: string;
  confidential: boolean;
  status: string;
  employmentType: string;
  locationId: string;
  departmentId: string;
  defaultInterviewPlanId: string;
  interviewPlanIds: string[];
  customFields: string[];
  jobPostingIds: string[];
  customRequisitionId: string;
  hiringTeam: string[];
  updatedAt: Date;
  location: {  id: string;
  name: string;
  isArchived: boolean;
  address: {  postalAddress: {  addressCountry: string;
  addressRegion: string;
  addressLocality: string;};};
  isRemote: boolean;};
  openings: string[];
};

export interface ActionInput_ashby_createapplication {
  candidateId: string;
  jobId: string;
  interviewPlanId: string;
  interviewStageId: string;
  sourceId: string;
  creditedToUserId: string;
};

export interface ActionOutput_ashby_createapplication {
  id: string;
  createdAt: Date;
  updatedAt: Date;
  status: string;
  customFields: string[];
  candidate: {  id: string;
  name: string;
  primaryEmailAddress: {  value: string;
  type: string;
  isPrimary: boolean;};
  primaryPhoneNumber: {  value: string;
  type: string;
  isPrimary: boolean;};};
  currentInterviewStage: {  id: string;
  title: string;
  type: string;
  orderInInterviewPlan: number;
  interviewPlanId: string;};
  source: {  id: string;
  title: string;
  isArchived: boolean;
  sourceType: {  id: string;
  title: string;
  isArchived: boolean;};};
  archiveReason: {  id: string;
  text: string;
  reasonType: string;
  isArchived: boolean;};
  job: {  id: string;
  title: string;
  locationId: string;
  departmentId: string;};
  creditedToUser: {  id: string;
  firstName: string;
  lastName: string;
  email: string;
  globalRole: string;
  isEnabled: boolean;
  updatedAt: Date;};
  hiringTeam: string[];
  appliedViaJobPostingId: string;
};

export interface ActionInput_ashby_createnote {
  candidateId: string;
  note: string | {  value: string;
  type: string;};
  sendNotifications: boolean;
};

export interface ActionOutput_ashby_createnote {
  id: string;
  createdAt: Date;
  content: string;
  author: {  id: string;
  firstName: string;
  lastName: string;
  email: string;};
};

export interface ActionInput_ashby_applicationchangesource {
  applicationId: string;
  sourceId: string;
};

export interface ActionOutput_ashby_applicationchangesource {
  success: boolean;
  errors: string[];
  results: {  id: string;
  createdAt: Date;
  updatedAt: Date;
  status: string;
  customFields: ()[];
  candidate: {  id: string;
  name: string;
  primaryEmailAddress: {  value: string;
  type?: any;
  isPrimary: string;};
  primaryPhoneNumber: {};};
  currentInterviewStage: {  id: string;
  title: string;
  type: string;
  orderInInterviewPlan: number;
  interviewStageGroupId: string;
  interviewPlanId: string;};
  source: {  id: string;
  title: string;
  isArchived: boolean;
  sourceType: {  id: string;
  title: string;
  isArchived: boolean;};};
  archiveReason: {  id: string;
  text: string;
  reasonType: string;
  isArchived: boolean;};
  archivedAt: Date;
  job: {  id: string;
  title: string;
  locationId: string;
  departmentId: string;};
  creditedToUser: {  id: string;
  firstName: string;
  lastName: string;
  email: string;
  globalRole: string;
  isEnabled: boolean;
  updatedAt: Date;};
  hiringTeam: (string | string | string | string | string)[];
  appliedViaJobPostingId: string;} | {  id: string;
  createdAt: Date;
  updatedAt: Date;
  name: string;
  primaryEmailAddress: {  value: string;
  type: string;
  isPrimary: boolean;};
  emailAddresses: (string | string | boolean)[];
  primaryPhoneNumber: (string | string | boolean)[];
  phoneNumbers: (string | string | boolean)[];
  socialLinks: (string | string)[];
  tags: (string | string | boolean)[];
  position: string | null;
  company: string | null;
  applicationIds: string[];
  resumeFileHandle: {  id: string;
  name: string;
  handle: string;};
  fileHandles: (string | string | string)[];
  customFields: ()[];
  profileUrl: string;
  source: {  id: string;
  title: string;
  isArchived: boolean;
  sourceType: {  id: string;
  title: string;
  isArchived: string;};};
  creditedToUser: {  id: string;
  firstName: string;
  lastName: string;
  email: string;
  globalRole: string;
  isEnabled: boolean;
  updatedAt: Date;};
  timezone: string;
  primaryLocation: {  id: string;
  locationSummary: string;
  locationComponents: (string | string)[];};} | {  id: string;
  title: string;
  type: string;
  orderInInterviewPlan: number;
  interviewStageGroupId: string;
  interviewPlanId: string;};
  moreDataAvailable: boolean;
};

export interface ActionInput_ashby_applicationchangestage {
  applicationId: string;
  interviewStageId: string;
  archiveReasonId: string;
};

export interface ActionOutput_ashby_applicationchangestage {
  success: boolean;
  errors: string[];
  results: {  id: string;
  createdAt: Date;
  updatedAt: Date;
  status: string;
  customFields: ()[];
  candidate: {  id: string;
  name: string;
  primaryEmailAddress: {  value: string;
  type?: any;
  isPrimary: string;};
  primaryPhoneNumber: {};};
  currentInterviewStage: {  id: string;
  title: string;
  type: string;
  orderInInterviewPlan: number;
  interviewStageGroupId: string;
  interviewPlanId: string;};
  source: {  id: string;
  title: string;
  isArchived: boolean;
  sourceType: {  id: string;
  title: string;
  isArchived: boolean;};};
  archiveReason: {  id: string;
  text: string;
  reasonType: string;
  isArchived: boolean;};
  archivedAt: Date;
  job: {  id: string;
  title: string;
  locationId: string;
  departmentId: string;};
  creditedToUser: {  id: string;
  firstName: string;
  lastName: string;
  email: string;
  globalRole: string;
  isEnabled: boolean;
  updatedAt: Date;};
  hiringTeam: (string | string | string | string | string)[];
  appliedViaJobPostingId: string;} | {  id: string;
  createdAt: Date;
  updatedAt: Date;
  name: string;
  primaryEmailAddress: {  value: string;
  type: string;
  isPrimary: boolean;};
  emailAddresses: (string | string | boolean)[];
  primaryPhoneNumber: (string | string | boolean)[];
  phoneNumbers: (string | string | boolean)[];
  socialLinks: (string | string)[];
  tags: (string | string | boolean)[];
  position: string | null;
  company: string | null;
  applicationIds: string[];
  resumeFileHandle: {  id: string;
  name: string;
  handle: string;};
  fileHandles: (string | string | string)[];
  customFields: ()[];
  profileUrl: string;
  source: {  id: string;
  title: string;
  isArchived: boolean;
  sourceType: {  id: string;
  title: string;
  isArchived: string;};};
  creditedToUser: {  id: string;
  firstName: string;
  lastName: string;
  email: string;
  globalRole: string;
  isEnabled: boolean;
  updatedAt: Date;};
  timezone: string;
  primaryLocation: {  id: string;
  locationSummary: string;
  locationComponents: (string | string)[];};} | {  id: string;
  title: string;
  type: string;
  orderInInterviewPlan: number;
  interviewStageGroupId: string;
  interviewPlanId: string;};
  moreDataAvailable: boolean;
};

export interface ActionInput_ashby_applicationupdate {
  0: {  applicationId: string;
  sourceId: string;};
  1: {  applicationId: string;
  interviewStageId: string;
  archiveReasonId: string;};
  2: {  applicationId: string;
  applicationHistory: (string | number | Date | string | string)[];};
};

export interface ActionOutput_ashby_applicationupdate {
  success: boolean;
  errors: string[];
  results: {  id: string;
  createdAt: Date;
  updatedAt: Date;
  status: string;
  customFields: ()[];
  candidate: {  id: string;
  name: string;
  primaryEmailAddress: {  value: string;
  type?: any;
  isPrimary: string;};
  primaryPhoneNumber: {};};
  currentInterviewStage: {  id: string;
  title: string;
  type: string;
  orderInInterviewPlan: number;
  interviewStageGroupId: string;
  interviewPlanId: string;};
  source: {  id: string;
  title: string;
  isArchived: boolean;
  sourceType: {  id: string;
  title: string;
  isArchived: boolean;};};
  archiveReason: {  id: string;
  text: string;
  reasonType: string;
  isArchived: boolean;};
  archivedAt: Date;
  job: {  id: string;
  title: string;
  locationId: string;
  departmentId: string;};
  creditedToUser: {  id: string;
  firstName: string;
  lastName: string;
  email: string;
  globalRole: string;
  isEnabled: boolean;
  updatedAt: Date;};
  hiringTeam: (string | string | string | string | string)[];
  appliedViaJobPostingId: string;} | {  id: string;
  createdAt: Date;
  updatedAt: Date;
  name: string;
  primaryEmailAddress: {  value: string;
  type: string;
  isPrimary: boolean;};
  emailAddresses: (string | string | boolean)[];
  primaryPhoneNumber: (string | string | boolean)[];
  phoneNumbers: (string | string | boolean)[];
  socialLinks: (string | string)[];
  tags: (string | string | boolean)[];
  position: string | null;
  company: string | null;
  applicationIds: string[];
  resumeFileHandle: {  id: string;
  name: string;
  handle: string;};
  fileHandles: (string | string | string)[];
  customFields: ()[];
  profileUrl: string;
  source: {  id: string;
  title: string;
  isArchived: boolean;
  sourceType: {  id: string;
  title: string;
  isArchived: string;};};
  creditedToUser: {  id: string;
  firstName: string;
  lastName: string;
  email: string;
  globalRole: string;
  isEnabled: boolean;
  updatedAt: Date;};
  timezone: string;
  primaryLocation: {  id: string;
  locationSummary: string;
  locationComponents: (string | string)[];};} | {  id: string;
  title: string;
  type: string;
  orderInInterviewPlan: number;
  interviewStageGroupId: string;
  interviewPlanId: string;};
  moreDataAvailable: boolean;
};

export interface ActionInput_ashby_applicationupdatehistory {
  applicationId: string;
  applicationHistory: (string | number | Date | string | string)[];
};

export interface ActionOutput_ashby_applicationupdatehistory {
  success: boolean;
  errors: string[];
  results: {  id: string;
  createdAt: Date;
  updatedAt: Date;
  status: string;
  customFields: ()[];
  candidate: {  id: string;
  name: string;
  primaryEmailAddress: {  value: string;
  type?: any;
  isPrimary: string;};
  primaryPhoneNumber: {};};
  currentInterviewStage: {  id: string;
  title: string;
  type: string;
  orderInInterviewPlan: number;
  interviewStageGroupId: string;
  interviewPlanId: string;};
  source: {  id: string;
  title: string;
  isArchived: boolean;
  sourceType: {  id: string;
  title: string;
  isArchived: boolean;};};
  archiveReason: {  id: string;
  text: string;
  reasonType: string;
  isArchived: boolean;};
  archivedAt: Date;
  job: {  id: string;
  title: string;
  locationId: string;
  departmentId: string;};
  creditedToUser: {  id: string;
  firstName: string;
  lastName: string;
  email: string;
  globalRole: string;
  isEnabled: boolean;
  updatedAt: Date;};
  hiringTeam: (string | string | string | string | string)[];
  appliedViaJobPostingId: string;} | {  id: string;
  createdAt: Date;
  updatedAt: Date;
  name: string;
  primaryEmailAddress: {  value: string;
  type: string;
  isPrimary: boolean;};
  emailAddresses: (string | string | boolean)[];
  primaryPhoneNumber: (string | string | boolean)[];
  phoneNumbers: (string | string | boolean)[];
  socialLinks: (string | string)[];
  tags: (string | string | boolean)[];
  position: string | null;
  company: string | null;
  applicationIds: string[];
  resumeFileHandle: {  id: string;
  name: string;
  handle: string;};
  fileHandles: (string | string | string)[];
  customFields: ()[];
  profileUrl: string;
  source: {  id: string;
  title: string;
  isArchived: boolean;
  sourceType: {  id: string;
  title: string;
  isArchived: string;};};
  creditedToUser: {  id: string;
  firstName: string;
  lastName: string;
  email: string;
  globalRole: string;
  isEnabled: boolean;
  updatedAt: Date;};
  timezone: string;
  primaryLocation: {  id: string;
  locationSummary: string;
  locationComponents: (string | string)[];};} | {  id: string;
  title: string;
  type: string;
  orderInInterviewPlan: number;
  interviewStageGroupId: string;
  interviewPlanId: string;};
  moreDataAvailable: boolean;
};

export interface ActionInput_ashby_createcandidate {
  name: string;
  email: string;
  phoneNumber: string;
  linkedInUrl: string;
  githubUrl: string;
  website: string;
  alternateEmailAddresses: string[];
  sourceId: string;
  creditedToUserId: string;
  location: {  city: string;
  region: string;
  country: string;};
  createdAt: Date;
};

export interface ActionOutput_ashby_createcandidate {
  success: boolean;
  errors: string[];
  results: {  id: string;
  createdAt: Date;
  updatedAt: Date;
  status: string;
  customFields: ()[];
  candidate: {  id: string;
  name: string;
  primaryEmailAddress: {  value: string;
  type?: any;
  isPrimary: string;};
  primaryPhoneNumber: {};};
  currentInterviewStage: {  id: string;
  title: string;
  type: string;
  orderInInterviewPlan: number;
  interviewStageGroupId: string;
  interviewPlanId: string;};
  source: {  id: string;
  title: string;
  isArchived: boolean;
  sourceType: {  id: string;
  title: string;
  isArchived: boolean;};};
  archiveReason: {  id: string;
  text: string;
  reasonType: string;
  isArchived: boolean;};
  archivedAt: Date;
  job: {  id: string;
  title: string;
  locationId: string;
  departmentId: string;};
  creditedToUser: {  id: string;
  firstName: string;
  lastName: string;
  email: string;
  globalRole: string;
  isEnabled: boolean;
  updatedAt: Date;};
  hiringTeam: (string | string | string | string | string)[];
  appliedViaJobPostingId: string;} | {  id: string;
  createdAt: Date;
  updatedAt: Date;
  name: string;
  primaryEmailAddress: {  value: string;
  type: string;
  isPrimary: boolean;};
  emailAddresses: (string | string | boolean)[];
  primaryPhoneNumber: (string | string | boolean)[];
  phoneNumbers: (string | string | boolean)[];
  socialLinks: (string | string)[];
  tags: (string | string | boolean)[];
  position: string | null;
  company: string | null;
  applicationIds: string[];
  resumeFileHandle: {  id: string;
  name: string;
  handle: string;};
  fileHandles: (string | string | string)[];
  customFields: ()[];
  profileUrl: string;
  source: {  id: string;
  title: string;
  isArchived: boolean;
  sourceType: {  id: string;
  title: string;
  isArchived: string;};};
  creditedToUser: {  id: string;
  firstName: string;
  lastName: string;
  email: string;
  globalRole: string;
  isEnabled: boolean;
  updatedAt: Date;};
  timezone: string;
  primaryLocation: {  id: string;
  locationSummary: string;
  locationComponents: (string | string)[];};} | {  id: string;
  title: string;
  type: string;
  orderInInterviewPlan: number;
  interviewStageGroupId: string;
  interviewPlanId: string;};
  moreDataAvailable: boolean;
};

export interface ActionInput_ashby_interviewstage {
  interviewPlanId: string;
};

export interface ActionOutput_ashby_interviewstage {
  stages: (string | string | string | number | string | string)[];
};
