// ---------------------------
// This file was generated by Nango (v0.63.0)
// You can version this file
// ---------------------------

export interface SyncMetadata_avalara_transactions {
  company: string;
  backfillPeriodMs: number;
};

export interface Transaction {
  id: string;
  code: string;
  companyId: number;
  date: string;
  paymentDate: string;
  status: string;
  type: string;
  batchCode: string;
  currencyCode: string;
  exchangeRateCurrencyCode: string;
  customerUsageType: string;
  entityUseCode: string;
  customerVendorCode: string;
  customerCode: string;
  exemptNo: string;
  reconciled: boolean;
  locationCode: string;
  reportingLocationCode: string;
  purchaseOrderNo: string;
  referenceCode: string;
  salespersonCode: string;
  taxOverrideType: string;
  taxOverrideAmount: number;
  taxOverrideReason: string;
  totalAmount: number;
  totalExempt: number;
  totalDiscount: number;
  totalTax: number;
  totalTaxable: number;
  totalTaxCalculated: number;
  adjustmentReason: string;
  adjustmentDescription: string;
  locked: boolean;
  region: string;
  country: string;
  version: number;
  softwareVersion: string;
  originAddressId: number;
  destinationAddressId: number;
  exchangeRateEffectiveDate: string;
  exchangeRate: number;
  isSellerImporterOfRecord: boolean;
  description: string;
  email: string;
  businessIdentificationNo: string;
  modifiedDate: string;
  modifiedUserId: number;
  taxDate: string;
  lines: (number | number | string | number | string | string | number | number | number | number | number | number | string | boolean | boolean | string | number | number | string | string | string | string | number | number | number | string | string | string | string | number | string | boolean | (number | number | number | number | string | string | string | number | number | number | boolean | string | string | number | string | string | string | number | number | string | number | number | number | string | string | number | number | string | string | number | number | number | number | string | number | number | number | number | number | number | number | number | number | number | number)[] | number | number | number | number)[];
  locationTypes: any[];
  messages: string[];
  summary: string[];
  addresses: (number | number | string | string | string | string | string | string | number)[];
  taxDetailsByTaxType: (string | number | number | number | number)[];
};

export interface ActionInput_avalara_createtransaction {
  invoice: {  id: string;
  invoiceNumber: string;
  emissionDate: string;
  dueDate: string;
  status: 'to_pay' | 'partially_paid' | 'paid' | 'late' | 'grace_period' | 'to_pay_batch' | 'voided';
  taxRate: string;
  currency: string;
  invoiceLineItems: (string | string | null | string | string | null | number | string | number | string | number | number | string | null | string | null | (string | string | number)[])[];
  coupons: (string | number)[];
  type: 'invoice' | 'refund';
  discountAmount: number;};
  externalCustomerId: string;
  companyCode: string;
  addresses: {  singleLocation: {  line1: string;
  city: string;
  region: string;
  country: string;
  postalCode: string;};
  shipFrom: {  line1: string;
  city: string;
  region: string;
  country: string;
  postalCode: string;};
  shipTo: {  line1: string;
  city: string;
  region: string;
  country: string;
  postalCode: string;};
  pointOfOrderOrigin: {  line1: string;
  city: string;
  region: string;
  country: string;
  postalCode: string;};
  pointOfOrderAcceptance: {  line1: string;
  city: string;
  region: string;
  country: string;
  postalCode: string;};
  goodsPlaceOrServiceRendered: {  line1: string;
  city: string;
  region: string;
  country: string;
  postalCode: string;};
  import: {  line1: string;
  city: string;
  region: string;
  country: string;
  postalCode: string;};
  billTo: {  line1: string;
  city: string;
  region: string;
  country: string;
  postalCode: string;};};
};

export interface ActionOutput_avalara_createtransaction {
  id: string;
};

export interface ActionInput_avalara_committransaction {
  transactionCode: string;
};

export interface ActionOutput_avalara_committransaction {
  id: string;
};

export interface ActionInput_avalara_voidtransaction {
  transactionCode: string;
};

export interface ActionOutput_avalara_voidtransaction {
  id: string;
};
