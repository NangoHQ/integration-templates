// ---------------------------
// This file was generated by Nango (v0.61.2)
// You can version this file
// ---------------------------

export interface TransactionReferenceObject {
    banking_provider: string | null;
    provider_field_name: string | null;
    provider_field_value: string | null;
}

export interface LineItemWithTax {
    label: string;
    quantity: number;
    section_rank?: number;
    currency_amount: number;
    plan_item_number?: string;
    unit: string;
    vat_rate: string;
    description?: string;
    discount?: number;
}

export interface LineItemWithoutTax {
    label: string;
    quantity: number;
    section_rank?: number;
    currency_amount_before_tax: number;
    plan_item_number?: string;
    unit: string;
    vat_rate: string;
    description?: string;
    discount?: number;
}

export interface LineItemWithExistingProduct {
    label?: string;
    quantity: number;
    discount?: number;
    section_rank?: number;
    plan_item_number?: string;
    product: { source_id: string; price?: number; vat_rate?: string; unit?: string };
}

export interface CategoryObject {
    source_id: string;
    weight: number | null;
    amount: number | null;
}

export interface LineItemsSectionsAttributesObject {
    title?: string | null;
    description?: string | null;
    rank: number;
}

export interface CreateInvoice {
    create_customer?: boolean;
    create_products?: boolean;
    update_customer?: boolean;
    date: string;
    deadline: string;
    draft?: boolean;
    customer_source_id: string;
    external_id?: string | null;
    pdf_invoice_free_text?: string | null;
    pdf_invoice_subject?: string | null;
    currency?: string;
    special_mention?: string | null;
    discount?: number;
    language?: string;
    transactions_reference?: TransactionReferenceObject;
    line_items: LineItemWithTax[] | LineItemWithoutTax[] | LineItemWithExistingProduct[];
    categories?: CategoryObject[];
    line_items_sections_attributes?: LineItemsSectionsAttributesObject[];
    imputation_dates?: { start_date: string; end_date: string };
}

export interface ImputationDateObject {
    start_date: string;
    end_date: string;
}

export interface DeliveryAddressObject {
    address?: string;
    postal_code?: string | null;
    city?: string | null;
    country_alpha2?: string | null;
}

export interface PennylaneIndividualCustomer {
    customer_type?: string;
    first_name: string;
    last_name: string;
    country_alpha2: string;
    gender?: string | null;
    address?: string;
    postal_code?: string;
    city?: string;
    source_id?: string;
    emails?: string[];
    billing_iban?: string;
    delivery_address?: string | DeliveryAddressObject;
    vat_number?: string | null;
    delivery_postal_code?: string;
    delivery_city?: string;
    delivery_country_alpha2?: string;
    payment_conditions?: string;
    phone?: string;
    reference?: string;
    notes?: string;
    mandate?: { provider?: string; source_id: string };
    plan_item?: { number?: string; label?: string; enabled?: boolean; vat_rate?: string; country_alpha2?: string; description?: string };
}

export interface InvoiceLineItem {
    id?: number;
    label?: string;
    unit?: string | null;
    quantity?: string;
    amount?: string;
    currency_amount?: string;
    description?: string;
    product_id?: string | null;
    vat_rate?: string;
    currency_price_before_tax?: string;
    currency_tax?: string;
    raw_currency_unit_price?: string;
    discount?: string;
    discount_type?: string;
    section_rank?: number | null;
    v2_id?: number | null;
    product_v2_id?: number | null;
}

export interface InvoiceCategory {
    source_id: string;
    weight: string;
    label: string;
    direction: string | null;
    created_at: Date | string;
    updated_at: Date | string;
}

export interface PaymentsObject {
    label: string;
    created_at: Date | string;
    currency_amount: string;
}

export interface MatchedTransactionsObject {
    label: string | null;
    amount: string | null;
    group_uuid: string | null;
    date: Date | null;
    fee: string | null;
    currency: string;
}

export interface BillingSubscriptionObject {
    id: string | null;
}

export interface UpdateInvoice {
    id: string;
    label?: string | null;
    invoice_number?: string | null;
    quote_group_uuid?: string;
    is_draft?: boolean;
    is_estimate?: boolean;
    currency?: string;
    amount?: string;
    currency_amount?: string;
    currency_amount_before_tax?: string;
    exchange_rate?: number;
    date?: string | null;
    deadline?: string | null;
    currency_tax?: string;
    language?: string;
    paid?: boolean;
    fully_paid_at?: string | null;
    status?: string | null;
    discount?: string;
    discount_type?: string;
    public_url?: string;
    file_url?: string | null;
    filename?: string;
    remaining_amount?: string;
    source?: 'InvoiceSource';
    special_mention?: string | null;
    updated_at?: string;
    imputation_dates?: ImputationDateObject | null;
    customer?: PennylaneIndividualCustomer;
    line_items_sections_attributes?: LineItemsSectionsAttributesObject[];
    line_items?: InvoiceLineItem[];
    categories?: InvoiceCategory[];
    transactions_reference?: TransactionReferenceObject;
    payments?: PaymentsObject[];
    matched_transactions?: MatchedTransactionsObject[];
    pdf_invoice_free_text?: string;
    pdf_invoice_subject?: string;
    billing_subscription?: BillingSubscriptionObject | null;
}

export interface UpdateInvoiceResponse {
    invoice: UpdateInvoice;
}

export interface CreateSupplier {
    name: string;
    reg_no?: string;
    address: string;
    postal_code: string;
    city: string;
    country_alpha2: string;
    recipient?: string;
    vat_number?: string;
    source_id?: string;
    emails: string[];
    iban?: string;
    payment_conditions?: string;
    phone?: string;
    reference?: string;
    notes?: string;
}

export interface UpdateSupplier {
    source_id: string;
    name?: string;
    reg_no?: string;
    address?: string;
    postal_code?: string;
    city?: string;
    country_alpha2?: string;
    recipient?: string;
    vat_number?: string;
    emails?: string[];
    iban?: string;
    payment_conditions?: string;
    phone?: string;
    reference?: string;
    notes?: string;
}

export interface UpdateSupplierResponse {
    supplier: {
        source_id: string;
        name?: string;
        reg_no?: string;
        address?: string;
        postal_code?: string;
        city?: string;
        country_alpha2?: string;
        recipient?: string;
        vat_number?: string;
        emails?: string[];
        iban?: string;
        payment_conditions?: string;
        phone?: string;
        reference?: string;
        notes?: string;
    };
}

export interface PennylaneInvoice {
    id: string;
    amount: string | null;
    billing_subscription?: BillingSubscriptionObject | null;
    categories?: InvoiceCategory[] | null;
    currency: string | null;
    currency_amount: string | null;
    currency_amount_before_tax?: string | null;
    currency_tax: string | null;
    customer?: PennylaneIndividualCustomer;
    customer_name: string;
    customer_validation_needed: boolean | null;
    date?: Date | string;
    deadline: string | null;
    discount: string | null;
    discount_type?: string | null;
    exchange_rate: number | null;
    file_url: string | null;
    filename: string | null;
    fully_paid_at?: Date | null;
    imputation_dates: ImputationDateObject | null;
    invoice_number?: string | null;
    is_draft: boolean;
    is_estimate?: boolean;
    label?: string | null;
    language?: string | null;
    line_items?: InvoiceLineItem[];
    line_items_sections_attributes?: LineItemsSectionsAttributesObject[];
    matched_transactions?: MatchedTransactionsObject[];
    paid: boolean;
    payments: Record<string, any>[];
    pdf_invoice_free_text: string;
    pdf_invoice_subject: string;
    public_url: string | null;
    quote_group_uuid?: string | null;
    remaining_amount: string | null;
    source: string | null;
    special_mention: string | null;
    status: string | null;
    transactions_reference?: TransactionReferenceObject | null;
    updated_at: Date | string;
}

export interface InvoiceResponse {
    invoice: PennylaneInvoice;
}

export interface UpdateIndividualCustomer {
    id: string;
    customer: PennylaneIndividualCustomer;
}

export interface MandateObject {
    provider: string;
    source_id: string;
}

export interface IndividualCustomerResponse {
    customer: {
        first_name?: string;
        last_name?: string;
        gender?: string | null;
        name?: string;
        updated_at?: string;
        source_id: string;
        emails?: string[];
        billing_iban?: string | null;
        customer_type?: string;
        recipient?: string;
        billing_address?: { address?: string; postal_code?: string; city?: string; country_alpha2?: string };
        delivery_address?: { address?: string; postal_code?: string; city?: string; country_alpha2?: string };
        payment_conditions?: string;
        phone?: string;
        reference?: string;
        notes?: string;
        plan_item?: { number: string; label: string; enabled: boolean; vat_rate: string; country_alpha2: string; description: string };
        mandates?: MandateObject[];
    };
}

export interface PennylaneSuccessResponse {
    success: boolean;
    source_id: string;
}

export interface UpdatePennylaneCustomer {
    id: string;
    first_name?: string;
    last_name?: string;
    gender?: string;
    address?: string;
    vat_number?: string | null;
    postal_code?: string | null;
    city?: string | null;
    country_alpha2?: string | null;
    recipient?: string | null;
    source_id?: string | null;
    emails?: string[] | null;
    billing_iban?: string | null;
    delivery_address?: DeliveryAddressObject | null;
    delivery_postal_code?: string | null;
    delivery_country?: string | null;
    delivery_country_alpha2?: string | null;
    payment_conditions?: string | null;
    phone?: string | null;
    reference?: string | null;
    notes?: string | null;
}

export interface PennylaneCustomer {
    id: string;
    first_name?: string;
    last_name?: string;
    gender?: string;
    address?: string;
    vat_number?: string | null;
    postal_code?: string | null;
    city?: string | null;
    country_alpha2?: string | null;
    recipient?: string | null;
    source_id?: string | null;
    emails?: string[] | null;
    billing_iban?: string | null;
    delivery_address?: DeliveryAddressObject | null;
    delivery_postal_code?: string | null;
    delivery_country_alpha2?: string | null;
    payment_conditions?: string | null;
    phone?: string | null;
    reference?: string | null;
    notes?: string | null;
}

export interface PennylaneSupplier {
    name: string;
    id?: string;
    reg_no?: string;
    address: string;
    postal_code: string;
    city: string;
    country_alpha2: string;
    recipient?: string;
    vat_number?: string;
    source_id?: string;
    emails: string[];
    iban?: string;
    payment_conditions?: string;
    phone?: string;
    reference?: string;
    notes?: string;
}

export interface CreateProduct {
    source_id: string;
    label: string;
    description?: string;
    unit: string;
    price_before_tax?: number;
    price: number;
    vat_rate: string;
    currency: string;
    reference?: string | null;
    substance?: string | null;
}

export interface UpdateProduct {
    source_id: string;
    label?: string;
    description?: string;
    unit?: string;
    price_before_tax?: number;
    price?: number;
    vat_rate?: string;
    currency?: string;
    reference?: string | null;
    substance?: string | null;
}

export interface PennylaneProduct {
    id: string;
    source_id: string;
    label: string;
    description?: string;
    unit: string;
    price_before_tax?: number;
    price: number;
    vat_rate: string;
    currency: string;
    reference?: string | null;
    substance?: string | null;
}

export interface InvoiceMapper {
    create_customer: boolean;
    create_products: boolean;
    update_customer: boolean;
    invoice: {
        date: string;
        deadline: string;
        draft: boolean;
        customer: { source_id: string };
        currency: string;
        line_items: LineItemWithTax[] | LineItemWithoutTax[] | LineItemWithExistingProduct[];
        pdf_invoice_free_text: string;
        pdf_invoice_subject: string;
        special_mention: string | null;
        discount: number;
        categories: CategoryObject[] | null;
        transactions_reference?: { banking_provider: string; provider_field_name: string; provider_field_value: string };
        imputation_dates?: { start_date: string; end_date: string };
    };
}
