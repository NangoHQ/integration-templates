// Generated by ts-to-zod
import { z } from 'zod';

export const idEntitySchema = z.object({
    id: z.string()
});

export const successResponseSchema = z.object({
    success: z.boolean()
});

export const actionResponseErrorSchema = z.object({
    message: z.string()
});

export const createUserSchema = z.object({
    firstName: z.string(),
    lastName: z.string(),
    email: z.string()
});

export const userSchema = z.object({
    id: z.string(),
    firstName: z.string(),
    lastName: z.string(),
    email: z.string()
});

export const expensifyDisableUserSchema = z.object({
    id: z.string(),
    email: z.string()
});

export const expsensifyNullableUserSchema = z.object({
    id: z.string().nullable(),
    firstName: z.string().nullable(),
    lastName: z.string().nullable(),
    email: z.string()
});

export const policySchema = z.object({
    id: z.string(),
    type: z.string(),
    name: z.string(),
    shouldShowAutoApprovalOptions: z.boolean(),
    role: z.string(),
    areCompanyCardsEnabled: z.boolean(),
    shouldShowCustomReportTitleOption: z.boolean(),
    areExpensifyCardsEnabled: z.boolean(),
    areRulesEnabled: z.boolean(),
    areConnectionsEnabled: z.boolean(),
    approvalMode: z.string(),
    areCategoriesEnabled: z.boolean(),
    areReportFieldsEnabled: z.boolean(),
    areWorkflowsEnabled: z.boolean(),
    outputCurrency: z.string(),
    owner: z.string(),
    areInvoicesEnabled: z.boolean(),
    createdAt: z.string(),
    eReceipts: z.boolean(),
    shouldShowAutoReimbursementLimitOption: z.boolean(),
    areDistanceRatesEnabled: z.boolean(),
    isPolicyExpenseChatEnabled: z.string(),
    ownerAccountID: z.number(),
    areTagsEnabled: z.boolean()
});

export const expensifyListPolicyOutputSchema = z.object({
    policies: z.array(policySchema)
});
